<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android 前台服务</title>
    <url>/2019/10/22/Android%20%E5%89%8D%E5%8F%B0%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h1 id="android-前台服务"><a class="markdownIt-Anchor" href="#android-前台服务"></a> Android 前台服务</h1>
<span id="more"></span>
<h2 id="添加权限"><a class="markdownIt-Anchor" href="#添加权限"></a> 添加权限</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;uses-permission android:name=&quot;android.permission.FOREGROUND_SERVICE&quot;/&gt;</span><br></pre></td></tr></table></figure>
<h2 id="创建前台服务"><a class="markdownIt-Anchor" href="#创建前台服务"></a> 创建前台服务</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (android.os.Build.VERSION.SDK_INT &gt;= android.os.Build.VERSION_CODES.O) &#123;</span><br><span class="line">    <span class="type">NotificationChannel</span> <span class="variable">channel</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NotificationChannel</span>(<span class="string">&quot;Example&quot;</span>,<span class="string">&quot;Example&quot;</span>, NotificationManager.IMPORTANCE_HIGH);</span><br><span class="line">    ((NotificationManager) getSystemService(NOTIFICATION_SERVICE)).createNotificationChannel(channel);</span><br><span class="line">&#125;</span><br><span class="line">NotificationCompat.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">NotificationCompat</span>.Builder(<span class="built_in">this</span>, <span class="string">&quot;Example&quot;</span>);</span><br><span class="line">builder.setSmallIcon(R.mipmap.ic_launcher);</span><br><span class="line">builder.setContentTitle(<span class="string">&quot;Example&quot;</span>);</span><br><span class="line">builder.setContentText(<span class="string">&quot;Running&quot;</span>);</span><br><span class="line">startForeground(<span class="number">1</span>, builder.build());</span><br></pre></td></tr></table></figure>
<p>前台服务需要创建一个channel用来显示在通知栏</p>
<h2 id="关闭服务"><a class="markdownIt-Anchor" href="#关闭服务"></a> 关闭服务</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stopForeground(true);</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Android</category>
      </categories>
  </entry>
  <entry>
    <title>BIOS启动流程</title>
    <url>/2022/01/27/BIOS%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="-swig0-"><a class="markdownIt-Anchor" href="#-swig0-"></a> BIOS启动流程</h1>
<span id="more"></span>
<h2 id="传统bios"><a class="markdownIt-Anchor" href="#传统bios"></a> 传统BIOS</h2>
<p>1 上电</p>
<p>2 自检POST</p>
<p>3 查找启动器</p>
<p>4 加载位于MBR上的bootloader</p>
<h2 id="uefi"><a class="markdownIt-Anchor" href="#uefi"></a> UEFI</h2>
<p>1 上电</p>
<p>2 查找启动器</p>
<p>3 查找ESP分区下的bootx64.efi</p>
<p>注：windows可以使用bcdboot创建efi文件，linux使用grub-install创建efi文件</p>
]]></content>
  </entry>
  <entry>
    <title>Android模拟定位</title>
    <url>/2019/10/22/Android%E6%A8%A1%E6%8B%9F%E5%AE%9A%E4%BD%8D/</url>
    <content><![CDATA[<h1 id="android模拟定位"><a class="markdownIt-Anchor" href="#android模拟定位"></a> Android模拟定位</h1>
<span id="more"></span>
<h2 id="编写环境"><a class="markdownIt-Anchor" href="#编写环境"></a> 编写环境</h2>
<p>Android Studio，Android 6.0以上</p>
<h2 id="添加权限"><a class="markdownIt-Anchor" href="#添加权限"></a> 添加权限</h2>
<p>AndroidManifest.xml</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;uses-permission android:name=&quot;android.permission.ACCESS_FINE_LOCATION&quot;/&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.ACCESS_COARSE_LOCATION&quot;/&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.ACCESS_MOCK_LOCATION&quot; /&gt;</span><br></pre></td></tr></table></figure>
<h2 id="添加模拟定位"><a class="markdownIt-Anchor" href="#添加模拟定位"></a> 添加模拟定位</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">_location_manager = (LocationManager)getSystemService(LOCATION_SERVICE);</span><br><span class="line">List&lt;String&gt; providers = _location_manager.getAllProviders();</span><br><span class="line"><span class="keyword">for</span> (String providerstr : providers) &#123;</span><br><span class="line">    <span class="keyword">if</span> (providerstr.equals(<span class="string">&quot;passive&quot;</span>))</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    _provider_string.add(providerstr);</span><br><span class="line">    Log.d(<span class="built_in">this</span>.getClass().getName(), providerstr);</span><br><span class="line">    <span class="type">LocationProvider</span> <span class="variable">provider</span> <span class="operator">=</span> _location_manager.getProvider(providerstr);</span><br><span class="line">    _location_manager.addTestProvider(provider.getName(),</span><br><span class="line">        provider.hasMonetaryCost(),</span><br><span class="line">        provider.supportsAltitude(),</span><br><span class="line">        provider.supportsSpeed(),</span><br><span class="line">        provider.supportsBearing(),</span><br><span class="line">        provider.getPowerRequirement(),</span><br><span class="line">        provider.getAccuracy());</span><br><span class="line">    _location_manager.setTestProviderEnabled(providerstr, <span class="literal">true</span>);</span><br><span class="line">    _location_manager.setTestProviderStatus(providerstr, LocationProvider.AVAILABLE, <span class="literal">null</span>, System.currentTimeMillis());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>passive为被动获取不能模拟</p>
<h2 id="模拟定位"><a class="markdownIt-Anchor" href="#模拟定位"></a> 模拟定位</h2>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">_location_manager = (LocationManager)getSystemService(LOCATION_SERVICE);</span><br><span class="line">List&lt;String&gt; providers = _location_manager.getAllProviders();</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (String providerstr : providers) &#123;</span><br><span class="line">        <span class="keyword">if</span> (providerstr.equals(<span class="string">&quot;passive&quot;</span>))</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        <span class="type">Location</span> <span class="variable">mockloc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Location</span>(providerstr);</span><br><span class="line">        <span class="comment">// 经度</span></span><br><span class="line">        mockloc.setLongitude(<span class="number">88</span>);</span><br><span class="line">        <span class="comment">// 纬度</span></span><br><span class="line">        mockloc.setLatitude(<span class="number">88</span>);</span><br><span class="line">        <span class="comment">// 高度</span></span><br><span class="line">        mockloc.setAltitude(<span class="number">0</span>);</span><br><span class="line">        mockloc.setBearing(<span class="number">180</span>);</span><br><span class="line">        mockloc.setSpeed(<span class="number">0</span>);</span><br><span class="line">        mockloc.setAccuracy(<span class="number">3.0f</span>);</span><br><span class="line">        mockloc.setTime(System.currentTimeMillis());</span><br><span class="line">        mockloc.setElapsedRealtimeNanos(SystemClock.elapsedRealtime());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            _location_manager.setTestProviderLocation(providerstr, mockloc);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (IllegalArgumentException e)&#123;</span><br><span class="line">            Log.e(MockLocationService.class.getName(), <span class="string">&quot;Set Provider Error&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Android</category>
      </categories>
  </entry>
  <entry>
    <title>Android编译lua-5.4.1</title>
    <url>/2020/11/25/Android%E7%BC%96%E8%AF%91lua-5-4-1/</url>
    <content><![CDATA[<h1 id="android编译lua-541"><a class="markdownIt-Anchor" href="#android编译lua-541"></a> Android编译lua-5.4.1</h1>
<span id="more"></span>
<p>我的目标是编译一个在android上的一个lua解释器</p>
<h2 id="环境"><a class="markdownIt-Anchor" href="#环境"></a> 环境</h2>
<p>NDK版本为21.1.6352462</p>
<p>CMake版本为3.15.0</p>
<p>lua源码为5.4.1</p>
<p>ninja版本1.8.2</p>
<h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h2>
<p>我打算直接使用CMake命令生成ninja的工程文件,然后使用ninja命令进行编译,由于lua源码是使用Makefile,需要添加一个CMakeLists.txt文件</p>
<h3 id="1-cmakeliststxt"><a class="markdownIt-Anchor" href="#1-cmakeliststxt"></a> 1 CMakeLists.txt</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># NDK版本需要大于21否则缺少函数</span><br><span class="line">set(ANDROID_NATIVE_API_LEVEL 21)</span><br><span class="line"># 使用NDK的toolchain进行编译</span><br><span class="line">include(C:/Users/Tbolp/AppData/Local/Android/Sdk/ndk/21.1.6352462/build/cmake/android.toolchain.cmake)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cmake_minimum_required(VERSION 3.12)</span><br><span class="line"></span><br><span class="line">project(lua-5.4.1)</span><br><span class="line"></span><br><span class="line">add_executable(lua-5.4.1 </span><br><span class="line">src/lapi.c </span><br><span class="line">src/lcode.c </span><br><span class="line">src/lctype.c </span><br><span class="line">src/ldebug.c </span><br><span class="line">src/ldo.c </span><br><span class="line">src/ldump.c </span><br><span class="line">src/lfunc.c </span><br><span class="line">src/lgc.c </span><br><span class="line">src/llex.c </span><br><span class="line">src/lmem.c </span><br><span class="line">src/lobject.c </span><br><span class="line">src/lopcodes.c </span><br><span class="line">src/lparser.c </span><br><span class="line">src/lstate.c </span><br><span class="line">src/lstring.c </span><br><span class="line">src/ltable.c </span><br><span class="line">src/ltm.c </span><br><span class="line">src/lundump.c </span><br><span class="line">src/lvm.c </span><br><span class="line">src/lzio.c </span><br><span class="line">src/lauxlib.c </span><br><span class="line">src/lbaselib.c </span><br><span class="line">src/lcorolib.c </span><br><span class="line">src/ldblib.c </span><br><span class="line">src/liolib.c </span><br><span class="line">src/lmathlib.c </span><br><span class="line">src/loadlib.c </span><br><span class="line">src/loslib.c </span><br><span class="line">src/lstrlib.c </span><br><span class="line">src/ltablib.c </span><br><span class="line">src/lutf8lib.c </span><br><span class="line">src/linit.c </span><br><span class="line">src/lua.c)</span><br></pre></td></tr></table></figure>
<h3 id="2-编译"><a class="markdownIt-Anchor" href="#2-编译"></a> 2 编译</h3>
<p>生成build.ninja</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake . -G Ninja</span><br></pre></td></tr></table></figure>
<p>编译文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ninja</span><br></pre></td></tr></table></figure>
<p>成功后会生成一个lua-5.4.1的文件</p>
<h3 id="3-运行"><a class="markdownIt-Anchor" href="#3-运行"></a> 3 运行</h3>
<p>需注意普通目录没有运行权限,需要将文件放入/data/local/tmp目录运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">adb devices -l</span><br><span class="line"></span><br><span class="line">adb push lua-5.4.1 /data/local/tmp</span><br><span class="line"></span><br><span class="line">adb shell</span><br><span class="line"></span><br><span class="line">cd /data/local/tmp</span><br><span class="line"></span><br><span class="line">chmod u+x lua-5.4.1</span><br><span class="line"></span><br><span class="line">./lua-5.4.1</span><br></pre></td></tr></table></figure>
<p>最后可以看到进入了lua交互中</p>
<h3 id="文档"><a class="markdownIt-Anchor" href="#文档"></a> 文档</h3>
<p><a href="https://cmake.org/cmake/help/v3.19/manual/cmake-toolchains.7.html#cross-compiling-for-android">https://cmake.org/cmake/help/v3.19/manual/cmake-toolchains.7.html#cross-compiling-for-android</a></p>
<p><a href="https://cmake.org/cmake/help/v3.19/manual/cmake-commands.7.html">https://cmake.org/cmake/help/v3.19/manual/cmake-commands.7.html</a></p>
<p><a href="https://bbs.pediy.com/thread-213564.htm">https://bbs.pediy.com/thread-213564.htm</a></p>
]]></content>
  </entry>
  <entry>
    <title>Chromium添加Extension api</title>
    <url>/2020/12/06/Chromium%E6%B7%BB%E5%8A%A0Extension-api/</url>
    <content><![CDATA[<h1 id="chromium添加extension-api"><a class="markdownIt-Anchor" href="#chromium添加extension-api"></a> Chromium添加Extension api</h1>
<span id="more"></span>
<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>extension api分为仅对chrome有效和对所有插件有效(来源于chromium文档未验证),以下以对所有插件有效做示例</p>
<h2 id="环境"><a class="markdownIt-Anchor" href="#环境"></a> 环境</h2>
<p>chroumium版本 70.0.3538.513</p>
<h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h2>
<h3 id="声明导出的模块"><a class="markdownIt-Anchor" href="#声明导出的模块"></a> 声明导出的模块</h3>
<p>在extensions/common/api/_api_features.json添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;example&quot;: &#123;</span><br><span class="line">  &quot;channel&quot;: &quot;stable&quot;,</span><br><span class="line">  &quot;contexts&quot;: [&quot;blessed_extension&quot;],</span><br><span class="line">  &quot;matches&quot;: [&quot;&lt;all_urls&gt;&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>1 用来声明导出模块适用的范围和导出模块的名称</p>
<p>2 _api_features.json在extensions/common/api和chrome/common/extensions/api中都存在,根据范围不同在不同文件添加</p>
<h3 id="编写idl文件"><a class="markdownIt-Anchor" href="#编写idl文件"></a> 编写IDL文件</h3>
<p>添加extensions\common\api\example.idl</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//</span><br><span class="line">namespace example &#123;</span><br><span class="line"></span><br><span class="line">  callback StartCallback = void(DOMString ret);</span><br><span class="line"></span><br><span class="line">  // 声明对外的函数接口有哪些</span><br><span class="line">  interface Functions &#123;</span><br><span class="line">    static void start(StartCallback callback);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  // 声明对外的事件有哪些</span><br><span class="line">  interface Events &#123;</span><br><span class="line">    static void onFinished(DOMString ret);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>1 第一行必须为注释,否则会编译失败</p>
<p>2 函数是使用callback的方式返回值,不论是否同步或异步</p>
<p>3 extensions/common/api和chrome/common/extensions/api中都可以添加,根据范围不同在不同文件添加</p>
<h3 id="编写c"><a class="markdownIt-Anchor" href="#编写c"></a> 编写C++</h3>
<p>添加extensions\browser\api\example<br />
在目录下添加example_api.h和example_api.cc</p>
<p>example_api.h</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#ifndef __EXAMPLE_H__</span><br><span class="line">#define __EXAMPLE_H__</span><br><span class="line">#include &quot;extensions/browser/extension_function.h&quot;</span><br><span class="line"></span><br><span class="line">namespace extensions &#123;</span><br><span class="line">namespace api &#123;</span><br><span class="line"></span><br><span class="line">class ExampleStartFunction : public UIThreadExtensionFunction &#123;</span><br><span class="line"> public:</span><br><span class="line">  // 声明扩展的函数</span><br><span class="line">  DECLARE_EXTENSION_FUNCTION(&quot;example.start&quot;, EXAMPLE_START)</span><br><span class="line">  ExampleStartFunction();</span><br><span class="line">  // 函数实际执行</span><br><span class="line">  ResponseAction Run() override;</span><br><span class="line"></span><br><span class="line"> private:</span><br><span class="line">  void DoTask();</span><br><span class="line">  void OnFinished();</span><br><span class="line"></span><br><span class="line"> protected:</span><br><span class="line">  ~ExampleStartFunction() override;</span><br><span class="line">&#125;;</span><br><span class="line">&#125;  // namespace api</span><br><span class="line">&#125;  // namespace extensions</span><br><span class="line">#endif</span><br></pre></td></tr></table></figure>
<p>EXAMPLE_START枚举需要在extensions\browser\extension_event_histogram_value.h里面添加</p>
<p>example_api.cc</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &quot;example_api.h&quot;</span><br><span class="line">#include &lt;thread&gt;</span><br><span class="line">#include &quot;base/task/post_task.h&quot;</span><br><span class="line">#include &quot;extensions/browser/event_router.h&quot;</span><br><span class="line">// 自动生成的文件</span><br><span class="line">#include &quot;extensions/common/api/example.h&quot;</span><br><span class="line"></span><br><span class="line">namespace extensions &#123;</span><br><span class="line">namespace api &#123;</span><br><span class="line"></span><br><span class="line">ExampleStartFunction::ExampleStartFunction() &#123;&#125;</span><br><span class="line"></span><br><span class="line">ExampleStartFunction::~ExampleStartFunction() &#123;&#125;</span><br><span class="line"></span><br><span class="line">ExtensionFunction::ResponseAction ExampleStartFunction::Run() &#123;</span><br><span class="line">  base::PostTaskAndReply(</span><br><span class="line">      FROM_HERE,</span><br><span class="line">      base::BindOnce(&amp;ExampleStartFunction::DoTask, base::RetainedRef(this)),</span><br><span class="line">      base::BindOnce(&amp;ExampleStartFunction::OnFinished,</span><br><span class="line">                     base::RetainedRef(this)));</span><br><span class="line">  return RespondLater();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void ExampleStartFunction::DoTask() &#123;</span><br><span class="line">  std::this_thread::sleep_for(std::chrono::seconds(10));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void ExampleStartFunction::OnFinished() &#123;</span><br><span class="line">  DCHECK(content::BrowserThread::CurrentlyOn(content::BrowserThread::UI));</span><br><span class="line">  // 触发event,前端可以添加监听获得</span><br><span class="line">  EventRouter::Get(context_)-&gt;DispatchEventToExtension(</span><br><span class="line">      extension_id(),</span><br><span class="line">      std::make_unique&lt;Event&gt;(</span><br><span class="line">          extensions::events::ONFINISHED, api::example::OnFinished::kEventName,</span><br><span class="line">          api::example::OnFinished::Create(&quot;finished event&quot;)));</span><br><span class="line">  Respond(OneArgument(std::make_unique&lt;base::Value&gt;(&quot;task finished&quot;)));</span><br><span class="line">&#125;</span><br><span class="line">&#125;  // namespace api</span><br><span class="line">&#125;  // namespace extensions</span><br></pre></td></tr></table></figure>
<p>ONFINISHED枚举在extensions\browser\extension_event_histogram_value.h里面添加</p>
<p>1 文件名以&quot;模块名_api.h&quot;结尾,否则生成时无法找到</p>
<p>2 生成文件有问题可以删除重新生成\src\out\Debug\gen\extensions\browser\api\generated_api_registration.h</p>
<p>3 chrome\browser\extensions\api和extensions\browser\api中都可以添加,根据范围不同在不同文件添加</p>
<h3 id="添加编译文件"><a class="markdownIt-Anchor" href="#添加编译文件"></a> 添加编译文件</h3>
<p>在extensions\browser\api\<a href="http://xn--exampleBUILD-ee7t5480atjwf.gn">example里添加BUILD.gn</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import(&quot;//extensions/buildflags/buildflags.gni&quot;)</span><br><span class="line"></span><br><span class="line">assert(enable_extensions,</span><br><span class="line">       &quot;Cannot depend on extensions because enable_extensions=false.&quot;)</span><br><span class="line"></span><br><span class="line">source_set(&quot;example&quot;) &#123;</span><br><span class="line">  sources = [</span><br><span class="line">    &quot;example_api.cc&quot;,</span><br><span class="line">    &quot;example_api.h&quot;,</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">  deps = [</span><br><span class="line">    &quot;//extensions/common/api&quot;,</span><br><span class="line">  ]</span><br><span class="line"></span><br><span class="line">   public_deps = [</span><br><span class="line">    &quot;//extensions/browser:browser_sources&quot;,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在extensions\browser\api\BUILD.gn中public_deps里添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;//extensions/browser/api/example&quot;</span><br></pre></td></tr></table></figure>
<p>在extensions\common\api\schema.gni中extensions_api_schema_files_里添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;example.idl&quot;,</span><br></pre></td></tr></table></figure>
<h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2>
<p>可以使用以下的扩展进行验证</p>
<p><a href="/blob/extensions.7z" title="Extension下载">Extension下载</a></p>
<h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2>
<p><a href="https://www.chromium.org/developers/design-documents/extensions/proposed-changes/creating-new-apis">https://www.chromium.org/developers/design-documents/extensions/proposed-changes/creating-new-apis</a></p>
]]></content>
  </entry>
  <entry>
    <title>EF Code First</title>
    <url>/2019/10/14/EF%20Code%20First/</url>
    <content><![CDATA[<h1 id="code-first"><a class="markdownIt-Anchor" href="#code-first"></a> Code First</h1>
<span id="more"></span>
<h2 id="编写环境"><a class="markdownIt-Anchor" href="#编写环境"></a> 编写环境</h2>
<p>VSCode，.Net Core2.1</p>
<h2 id="创建工程"><a class="markdownIt-Anchor" href="#创建工程"></a> 创建工程</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dotnet new console</span><br></pre></td></tr></table></figure>
<h2 id="添加依赖"><a class="markdownIt-Anchor" href="#添加依赖"></a> 添加依赖</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dotnet add package Microsoft.EntityFrameworkCore  -v 2.1</span><br><span class="line">dotnet add package Microsoft.EntityFrameworkCore.Design  -v 2.1</span><br><span class="line">dotnet add package Microsoft.EntityFrameworkCore.Sqlite -v 2.1</span><br></pre></td></tr></table></figure>
<h2 id="创建代码"><a class="markdownIt-Anchor" href="#创建代码"></a> 创建代码</h2>
<p>添加数据库对应代码，数据库Provider可以通过重写DbContext.OnConfiguring和AddDbContext(在asp.net中的服务里添加，此时构造函数需要接受一个参数DbContextOptions&lt;TContext&gt;)来确定，下文使用第一种方法。</p>
<p>注意需要get和set方法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">using Microsoft.EntityFrameworkCore;</span><br><span class="line"></span><br><span class="line">namespace Example&#123;</span><br><span class="line">    public class UserContext: DbContext&#123;</span><br><span class="line">    </span><br><span class="line">        protected override void OnConfiguring(DbContextOptionsBuilder builder)&#123;</span><br><span class="line">            builder.UseSqlite(&quot;Data Source=Example.db&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        public DbSet&lt;User&gt; Users&#123;get; set;&#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public class User&#123;</span><br><span class="line">        public int ID&#123;get; set;&#125;</span><br><span class="line">        public string Name&#123;get; set;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="创建迁移"><a class="markdownIt-Anchor" href="#创建迁移"></a> 创建迁移</h2>
<p>添加一个名为Install的迁移</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dotnet ef migrations add Install</span><br></pre></td></tr></table></figure>
<p>更新数据库会创建一个Example.db文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dotnet ef database update</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C#</category>
      </categories>
  </entry>
  <entry>
    <title>EFI分区扩容</title>
    <url>/2022/01/27/EFI%E5%88%86%E5%8C%BA%E6%89%A9%E5%AE%B9/</url>
    <content><![CDATA[<h1 id="-swig2-"><a class="markdownIt-Anchor" href="#-swig2-"></a> EFI分区扩容</h1>
<span id="more"></span>
<h2 id="window下efi分区扩容"><a class="markdownIt-Anchor" href="#window下efi分区扩容"></a> window下efi分区扩容</h2>
<p>windows升级时出现问题，查找原因后是由于EFI分区过小,记录一下解决方案</p>
<h3 id="1-创建efi分区"><a class="markdownIt-Anchor" href="#1-创建efi分区"></a> 1 创建EFI分区</h3>
<p>由于我的硬盘分区表里没有多余的空间，首先通过在windows磁盘管理通过压缩分区空余了1G的空间</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">diskpart</span><br><span class="line">list disk #列出硬盘</span><br><span class="line">select disk index #选择硬盘</span><br><span class="line">list partition # 列出分区</span><br><span class="line"># shrink desired=500</span><br><span class="line">select partition index # 选择分区</span><br><span class="line">create partition efi size=500 # 创建分区</span><br><span class="line">format quick fs=fat32 # 创建文件系统</span><br><span class="line">assign letter=z # 挂载分区</span><br><span class="line">list volume # 验证是否成功</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>
<h3 id="2-创建efi启动文件"><a class="markdownIt-Anchor" href="#2-创建efi启动文件"></a> 2 创建EFI启动文件</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bcdboot C:\windows /s Z:</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>other</category>
      </categories>
  </entry>
  <entry>
    <title>Git Stash</title>
    <url>/2019/12/14/Git%20Stash/</url>
    <content><![CDATA[<h1 id="git-stash"><a class="markdownIt-Anchor" href="#git-stash"></a> Git Stash</h1>
<h2 id="-more-"><a class="markdownIt-Anchor" href="#-more-"></a> <span id="more"></span></h2>
<p>1.保存更改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git stash</span><br></pre></td></tr></table></figure>
<p>添加信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git stash save &quot;message&quot;</span><br></pre></td></tr></table></figure>
<p>2.恢复更改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git stash pop</span><br></pre></td></tr></table></figure>
<p>3.冲突保留stash中所有的修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git stash pop</span><br><span class="line">git checkout --theirs -- .</span><br></pre></td></tr></table></figure>
<p>或者直接使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git checkout stash -- .</span><br></pre></td></tr></table></figure>
<p>4.冲突丢弃stash修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git stash pop</span><br><span class="line">git checkout --ours -- .</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Git</category>
      </categories>
  </entry>
  <entry>
    <title>NAT类型与穿透</title>
    <url>/2021/02/04/NAT%E7%B1%BB%E5%9E%8B%E4%B8%8E%E7%A9%BF%E9%80%8F/</url>
    <content><![CDATA[<h1 id="nat类型"><a class="markdownIt-Anchor" href="#nat类型"></a> NAT类型</h1>
<span id="more"></span>
<p>此处的NAT是指NAPT这种类型,首先简单说明一下NAT的流程</p>
<h2 id="nat流程"><a class="markdownIt-Anchor" href="#nat流程"></a> NAT流程</h2>
<p>A: 局域网内的主机,没有公网地址</p>
<p>R: 局域网的路由</p>
<p>B: 有公网地址的主机</p>
<p>以下为A主动和B建立TCP连接的流程</p>
<p>A访问B,通过路由表获得下一跳需要发到R</p>
<p>(A_ip, A_port, B_ip, B_port): A-&gt;R</p>
<p>R将根据A_ip和A_port一一映射到R的一个端口</p>
<p>(R_ip, R_port(A_ip, A_port), B_ip, B_port): R-&gt;B</p>
<p>B返回数据给R</p>
<p>(B_ip, B_port, R_ip, R_port): B-&gt;R</p>
<p>R通过返回包的端口发回给A</p>
<p>(B_ip, B_port, A_ip, A_port): R-&gt;A</p>
<h2 id="nat类型-2"><a class="markdownIt-Anchor" href="#nat类型-2"></a> NAT类型</h2>
<p>通过上面的流程可以知道当A的A_port访问B的B_port时会在R中留下一个映射关系,之后可以通过R_port可以找到内网对应的A_ip和A_port,完成转发.</p>
<p>NAT的分类均是在A访问B之后R_port存在的情况</p>
<h3 id="全锥形full-cone"><a class="markdownIt-Anchor" href="#全锥形full-cone"></a> 全锥形(Full Cone)</h3>
<p>如果主机C访问R_port,路由依然将数据发给R_port对应的主机,此时NAT为全锥形NAT,可以将R_port看作锥体的顶点,网络拓扑就像一个锥子一样</p>
<h3 id="限制锥型restricted-cone"><a class="markdownIt-Anchor" href="#限制锥型restricted-cone"></a> 限制锥型(Restricted Cone)</h3>
<p>C访问R_port路由不转发数据到对应的主机,但是B主机的B_port2(B_port2与B_port不同)访问R_port时转发,此时为限制锥型NAT.在A主机的A_port在向C主机发过数据后,B,C都可以通过访问R_port到A的相应端口,因为R_port只与A_ip和A_port有关,所以R_port不会变</p>
<h3 id="端口限制锥型port-restricted-cone"><a class="markdownIt-Anchor" href="#端口限制锥型port-restricted-cone"></a> 端口限制锥型(Port Restricted Cone)</h3>
<p>与限制锥型类似,只是B主机的B_port2直接访问R_port也不能转发,只有A主机向B_port2发过数据后才可以通过R_port访问</p>
<h3 id="对称型symmetric"><a class="markdownIt-Anchor" href="#对称型symmetric"></a> 对称型(Symmetric)</h3>
<p>对称型与前面的最大的区别是在于R_port(A_ip, A_port)的映射规则,三种锥型的R_port只与A_ip和A_port有关,而对称型的R_port(A_ip, A_port, B_ip, B_port)与出口地址也有关,其中任何一个变化对应的R_port也会变化</p>
<h2 id="nat穿透"><a class="markdownIt-Anchor" href="#nat穿透"></a> NAT穿透</h2>
<p>4种NAT总共有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>C</mi><mn>4</mn><mn>2</mn></msubsup><mo>+</mo><mn>4</mn><mo>=</mo><mn>10</mn></mrow><annotation encoding="application/x-tex">C_4^2+4=10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0622159999999998em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span></span></span></span>类型,除了(对称型,对称型)和(对称型,端口限制锥型)以外都可以通过STUN协议进行穿透</p>
]]></content>
  </entry>
  <entry>
    <title>Javascript原型理解</title>
    <url>/2017/09/02/Javascript%E5%8E%9F%E5%9E%8B%E7%90%86%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="javascript原型理解"><a class="markdownIt-Anchor" href="#javascript原型理解"></a> Javascript原型理解</h1>
<span id="more"></span>
<p>  本篇只是个人对于javascript原型的理解，可能与实际的原理有一些偏差，个人认为javascript对类的实现其实核心是如何通过对象模拟类这个概念具有的功能。</p>
<h1>创建类</h1>
<p>  javascript创建类，就是需要创建一个Object有着特定的键值对，因此我们需要一个函数和一个空的Object作为基础，这个函数一般被称为构造函数。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var A = function()&#123;</span><br><span class="line">    console.log(&#x27;A\&#x27;s constructor&#x27;);</span><br><span class="line">&#125;</span><br><span class="line">var a =  new A();</span><br></pre></td></tr></table></figure>
<p>  我们需要考虑javascript是如何执行以上过程的，当我们调用 <code>new A()</code>时，首先创建一个<code>a = &#123;&#125;</code>，之后使用类似<code>A.apply(a)</code>，完成初始化。</p>
<h1>继承类</h1>
　　通过以上的想法可以生成一个类实例，但是这并不足以完成类所应该完成的功能，接下来我们思考继承的实现。
<p>  继承需要用到键 <code>__proto__</code>，继承本质在于子类具有父类的功能，则键 <code>__proto__</code>需要指向父类，在javascript中即指向一个Object。在 <code>new</code>操作中并不仅仅只进行了简单的初始化，还为 <code>a</code>赋予了一个新键 <code>__proto__</code>，使其指向父对象。那么父对象在哪？父对象保存在 <code>A.prototype</code>的中。这两个键容易使我们迷惑，但是我们其实只需要知道继承链是通过 <code>__proto__</code>实现的就足够了。子类没有的键会查找 <code>a.__proto__</code>引用的对象里是否存在，没有则再查找 <code>a.__proto__.__proto__</code>里键是否存在，从而构成一个继承链，直到为<code>null</code>。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a.__proto__ === A.prototype; // 返回true</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>javascript</category>
      </categories>
  </entry>
  <entry>
    <title>LibTooling简介</title>
    <url>/2019/12/14/LibTooling%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="libtooling简介"><a class="markdownIt-Anchor" href="#libtooling简介"></a> LibTooling简介</h1>
<span id="more"></span>
<p>环境clang版本为8.0.0，Visual Studio 2019</p>
<h2 id="参数解析"><a class="markdownIt-Anchor" href="#参数解析"></a> 参数解析</h2>
<p>使用clang解析C++文件需要传入编译参数，llvm提供类CommonOptionsParser，可以添加自定义解析规则</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">CommonOptionsParser <span class="title">parser</span><span class="params">(argc, argv, GeneralCategory)</span></span>;</span><br></pre></td></tr></table></figure>
<h2 id="clangtool"><a class="markdownIt-Anchor" href="#clangtool"></a> ClangTool</h2>
<p>ClangTool获得解析后的参数即可分析文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ClangTool tool(parser.getCompilations(), parser.getSourcePathList());</span><br></pre></td></tr></table></figure>
<h2 id="frontendaction与astconsumer"><a class="markdownIt-Anchor" href="#frontendaction与astconsumer"></a> FrontendAction与ASTConsumer</h2>
<p>FrontendAction创建一个ASTConsumer，编译过程触发的事件通过重写ASTConsumer的虚函数可以进行处理，其中HandleTranslationUnit在每一个单元编译完成后调用，HandleTranslationUnit函数参数为ASTContext（可以看作AST树），RecursiveASTVisitor可以遍历ASTContext，完成AST树的遍历</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ExampleVisitor</span> : <span class="keyword">public</span> RecursiveASTVisitor&lt;ExampleVisitor&gt;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">ExampleVisitor</span>(SourceManager&amp; pSM) :</span><br><span class="line">        _source_manager(pSM) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">VisitCXXRecordDecl</span><span class="params">(CXXRecordDecl* pDecl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (_source_manager.<span class="built_in">isInMainFile</span>(pDecl-&gt;<span class="built_in">getLocation</span>())) &#123;</span><br><span class="line">            _class_name.<span class="built_in">emplace_back</span>(pDecl-&gt;<span class="built_in">getName</span>());</span><br><span class="line">            <span class="keyword">if</span> (pDecl-&gt;<span class="built_in">isTemplateDecl</span>())</span><br><span class="line">                std::cout &lt;&lt; <span class="string">&quot;template &quot;</span>;</span><br><span class="line">            std::cout &lt;&lt; pDecl-&gt;<span class="built_in">getNameAsString</span>() &lt;&lt; std::endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">VisitCXXMethodDecl</span><span class="params">(CXXMethodDecl* pDecl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (_source_manager.<span class="built_in">isInMainFile</span>(pDecl-&gt;<span class="built_in">getLocation</span>()))</span><br><span class="line">            std::cout &lt;&lt; pDecl-&gt;<span class="built_in">getNameAsString</span>() &lt;&lt; std::endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">TraverseNamespaceDecl</span><span class="params">(NamespaceDecl* pDecl)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (_source_manager.<span class="built_in">isInMainFile</span>(pDecl-&gt;<span class="built_in">getLocation</span>())) &#123;</span><br><span class="line">            std::cout &lt;&lt; pDecl-&gt;<span class="built_in">getNameAsString</span>() &lt;&lt; <span class="string">&quot; Start&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">            RecursiveASTVisitor::<span class="built_in">TraverseNamespaceDecl</span>(pDecl);</span><br><span class="line">            std::cout &lt;&lt; pDecl-&gt;<span class="built_in">getNameAsString</span>() &lt;&lt; <span class="string">&quot; End&quot;</span> &lt;&lt; std::endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    std::vector&lt;std::string&gt; _class_name;</span><br><span class="line">    SourceManager&amp; _source_manager;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ExampleConsumer</span> : <span class="keyword">public</span> ASTConsumer</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">ExampleConsumer</span>(SourceManager&amp; pSM) :</span><br><span class="line">        _visitor(pSM) &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">HandleTranslationUnit</span><span class="params">(ASTContext&amp; pContext)</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">        _visitor.<span class="built_in">TraverseDecl</span>(pContext.<span class="built_in">getTranslationUnitDecl</span>());</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    ExampleVisitor _visitor;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ExampleAction</span> : <span class="keyword">public</span> ASTFrontendAction</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">std::unique_ptr&lt;ASTConsumer&gt; <span class="title">CreateASTConsumer</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">        CompilerInstance&amp; pCompiler, StringRef pFile)</span> <span class="keyword">override</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> std::<span class="built_in">unique_ptr</span>&lt;ASTConsumer&gt;(<span class="keyword">new</span> <span class="built_in">ExampleConsumer</span>(pCompiler.<span class="built_in">getSourceManager</span>()));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h2 id="recursiveastvisitor"><a class="markdownIt-Anchor" href="#recursiveastvisitor"></a> RecursiveASTVisitor</h2>
<p>VisitCXXMethodDecl在遍历到类的成员方法时调用，Visit后可以跟节点名称</p>
<p>TraverseNamespaceDecl遍历该节点时调用，Traverse后可以跟节点名称，可以跳过某些类型节点</p>
<h2 id="sourcemanager"><a class="markdownIt-Anchor" href="#sourcemanager"></a> SourceManager</h2>
<p>可以找到节点对应源文件的位置</p>
<h2 id="运行frontendaction"><a class="markdownIt-Anchor" href="#运行frontendaction"></a> 运行FrontendAction</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tool.run(newFrontendActionFactory&lt;ExampleAction&gt;().get());</span><br></pre></td></tr></table></figure>
<h2 id="matchfinder"><a class="markdownIt-Anchor" href="#matchfinder"></a> MatchFinder</h2>
<p>当只需要查询某些节点，可以使用clang提供的MatchFinder类，则不需要自己去创建ASTConsumer</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Printer</span> : <span class="keyword">public</span> MatchFinder::MatchCallback</span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">run</span><span class="params">(<span class="type">const</span> MatchFinder::MatchResult&amp; pRes)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">auto</span> node = pRes.Nodes.<span class="built_in">getNodeAs</span>&lt;CXXRecordDecl&gt;(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (node &amp;&amp;</span><br><span class="line">            pRes.SourceManager-&gt;<span class="built_in">isInMainFile</span>(node-&gt;<span class="built_in">getLocation</span>()) &amp;&amp;</span><br><span class="line">            !node-&gt;<span class="built_in">isImplicit</span>()) &#123;</span><br><span class="line">            std::cout &lt;&lt; node-&gt;<span class="built_in">getName</span>().<span class="built_in">str</span>() &lt;&lt; std::endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">MatchFinder finder;</span><br><span class="line">Printer printer;</span><br><span class="line">finder.<span class="built_in">addMatcher</span>(<span class="built_in">cxxRecordDecl</span>().<span class="built_in">bind</span>(<span class="string">&quot;&quot;</span>), &amp;printer);</span><br><span class="line">tool.<span class="built_in">run</span>(<span class="built_in">newFrontendActionFactory</span>(&amp;finder).<span class="built_in">get</span>());</span><br></pre></td></tr></table></figure>
<h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h2>
<h3 id="查看ast树"><a class="markdownIt-Anchor" href="#查看ast树"></a> 查看AST树</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">clang++ -Xclang -ast-dump main.cpp</span><br></pre></td></tr></table></figure>
<h3 id="astmatcher和ast结点文档"><a class="markdownIt-Anchor" href="#astmatcher和ast结点文档"></a> ASTMatcher和AST结点文档</h3>
<p><a href="https://clang.llvm.org/docs/LibASTMatchersReference.html">https://clang.llvm.org/docs/LibASTMatchersReference.html</a></p>
<h3 id="引入"><a class="markdownIt-Anchor" href="#引入"></a> 引入</h3>
<p>头文件</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;clang/Tooling/CommonOptionsParser.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;clang/Tooling/Tooling.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;clang/ASTMatchers/ASTMatchers.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;clang/ASTMatchers/ASTMatchFinder.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;clang/AST/RecursiveASTVisitor.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;clang/Frontend/CompilerInstance.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> clang::tooling;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> clang;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> clang::ast_matchers;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> llvm;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> llvm::cl;</span><br></pre></td></tr></table></figure>
<p>库文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">clangAST.lib</span><br><span class="line">clangBasic.lib</span><br><span class="line">clangFrontend.lib</span><br><span class="line">clangIndex.lib</span><br><span class="line">clangLex.lib</span><br><span class="line">clangSema.lib</span><br><span class="line">clangSerialization.lib</span><br><span class="line">clangTooling.lib</span><br><span class="line">clangARCMigrate.lib</span><br><span class="line">LLVMAArch64CodeGen.lib</span><br><span class="line">LLVMAArch64AsmParser.lib</span><br><span class="line">LLVMAArch64AsmPrinter.lib</span><br><span class="line">LLVMAArch64Desc.lib</span><br><span class="line">LLVMAArch64Disassembler.lib</span><br><span class="line">LLVMAArch64Info.lib</span><br><span class="line">LLVMAArch64Utils.lib</span><br><span class="line">LLVMAMDGPUCodeGen.lib</span><br><span class="line">LLVMAMDGPUAsmParser.lib</span><br><span class="line">LLVMAMDGPUAsmPrinter.lib</span><br><span class="line">LLVMAMDGPUDesc.lib</span><br><span class="line">LLVMAMDGPUDisassembler.lib</span><br><span class="line">LLVMAMDGPUInfo.lib</span><br><span class="line">LLVMAMDGPUUtils.lib</span><br><span class="line">LLVMARMCodeGen.lib</span><br><span class="line">LLVMARMAsmParser.lib</span><br><span class="line">LLVMARMAsmPrinter.lib</span><br><span class="line">LLVMARMDesc.lib</span><br><span class="line">LLVMARMDisassembler.lib</span><br><span class="line">LLVMARMInfo.lib</span><br><span class="line">LLVMARMUtils.lib</span><br><span class="line">LLVMBPFCodeGen.lib</span><br><span class="line">LLVMBPFAsmParser.lib</span><br><span class="line">LLVMBPFAsmPrinter.lib</span><br><span class="line">LLVMBPFDesc.lib</span><br><span class="line">LLVMBPFDisassembler.lib</span><br><span class="line">LLVMBPFInfo.lib</span><br><span class="line">LLVMHexagonCodeGen.lib</span><br><span class="line">LLVMHexagonAsmParser.lib</span><br><span class="line">LLVMHexagonDesc.lib</span><br><span class="line">LLVMHexagonDisassembler.lib</span><br><span class="line">LLVMHexagonInfo.lib</span><br><span class="line">LLVMLanaiCodeGen.lib</span><br><span class="line">LLVMLanaiAsmParser.lib</span><br><span class="line">LLVMLanaiAsmPrinter.lib</span><br><span class="line">LLVMLanaiDesc.lib</span><br><span class="line">LLVMLanaiDisassembler.lib</span><br><span class="line">LLVMLanaiInfo.lib</span><br><span class="line">LLVMMipsCodeGen.lib</span><br><span class="line">LLVMMipsAsmParser.lib</span><br><span class="line">LLVMMipsAsmPrinter.lib</span><br><span class="line">LLVMMipsDesc.lib</span><br><span class="line">LLVMMipsDisassembler.lib</span><br><span class="line">LLVMMipsInfo.lib</span><br><span class="line">LLVMMSP430CodeGen.lib</span><br><span class="line">LLVMMSP430AsmParser.lib</span><br><span class="line">LLVMMSP430AsmPrinter.lib</span><br><span class="line">LLVMMSP430Desc.lib</span><br><span class="line">LLVMMSP430Disassembler.lib</span><br><span class="line">LLVMMSP430Info.lib</span><br><span class="line">LLVMNVPTXCodeGen.lib</span><br><span class="line">LLVMNVPTXAsmPrinter.lib</span><br><span class="line">LLVMNVPTXDesc.lib</span><br><span class="line">LLVMNVPTXInfo.lib</span><br><span class="line">LLVMPowerPCCodeGen.lib</span><br><span class="line">LLVMPowerPCAsmParser.lib</span><br><span class="line">LLVMPowerPCAsmPrinter.lib</span><br><span class="line">LLVMPowerPCDesc.lib</span><br><span class="line">LLVMPowerPCDisassembler.lib</span><br><span class="line">LLVMPowerPCInfo.lib</span><br><span class="line">LLVMSparcCodeGen.lib</span><br><span class="line">LLVMSparcAsmParser.lib</span><br><span class="line">LLVMSparcAsmPrinter.lib</span><br><span class="line">LLVMSparcDesc.lib</span><br><span class="line">LLVMSparcDisassembler.lib</span><br><span class="line">LLVMSparcInfo.lib</span><br><span class="line">LLVMSystemZCodeGen.lib</span><br><span class="line">LLVMSystemZAsmParser.lib</span><br><span class="line">LLVMSystemZAsmPrinter.lib</span><br><span class="line">LLVMSystemZDesc.lib</span><br><span class="line">LLVMSystemZDisassembler.lib</span><br><span class="line">LLVMSystemZInfo.lib</span><br><span class="line">LLVMWebAssemblyCodeGen.lib</span><br><span class="line">LLVMWebAssemblyAsmParser.lib</span><br><span class="line">LLVMWebAssemblyAsmPrinter.lib</span><br><span class="line">LLVMWebAssemblyDesc.lib</span><br><span class="line">LLVMWebAssemblyDisassembler.lib</span><br><span class="line">LLVMWebAssemblyInfo.lib</span><br><span class="line">LLVMX86CodeGen.lib</span><br><span class="line">LLVMX86AsmParser.lib</span><br><span class="line">LLVMX86AsmPrinter.lib</span><br><span class="line">LLVMX86Desc.lib</span><br><span class="line">LLVMX86Disassembler.lib</span><br><span class="line">LLVMX86Info.lib</span><br><span class="line">LLVMX86Utils.lib</span><br><span class="line">LLVMXCoreCodeGen.lib</span><br><span class="line">LLVMXCoreAsmPrinter.lib</span><br><span class="line">LLVMXCoreDesc.lib</span><br><span class="line">LLVMXCoreDisassembler.lib</span><br><span class="line">LLVMXCoreInfo.lib</span><br><span class="line">LLVMCore.lib</span><br><span class="line">LLVMSupport.lib</span><br><span class="line">clangStaticAnalyzerCheckers.lib</span><br><span class="line">clangStaticAnalyzerCore.lib</span><br><span class="line">clangCrossTU.lib</span><br><span class="line">clangDriver.lib</span><br><span class="line">version.lib</span><br><span class="line">clangParse.lib</span><br><span class="line">LLVMOption.lib</span><br><span class="line">clangEdit.lib</span><br><span class="line">clangAnalysis.lib</span><br><span class="line">clangASTMatchers.lib</span><br><span class="line">clangFormat.lib</span><br><span class="line">clangToolingInclusions.lib</span><br><span class="line">clangToolingCore.lib</span><br><span class="line">clangRewrite.lib</span><br><span class="line">LLVMipo.lib</span><br><span class="line">LLVMVectorize.lib</span><br><span class="line">LLVMIRReader.lib</span><br><span class="line">LLVMAsmParser.lib</span><br><span class="line">LLVMInstrumentation.lib</span><br><span class="line">LLVMLinker.lib</span><br><span class="line">LLVMGlobalISel.lib</span><br><span class="line">LLVMAsmPrinter.lib</span><br><span class="line">LLVMSelectionDAG.lib</span><br><span class="line">LLVMCodeGen.lib</span><br><span class="line">LLVMScalarOpts.lib</span><br><span class="line">LLVMAggressiveInstCombine.lib</span><br><span class="line">LLVMInstCombine.lib</span><br><span class="line">LLVMBitWriter.lib</span><br><span class="line">LLVMTarget.lib</span><br><span class="line">LLVMTransformUtils.lib</span><br><span class="line">LLVMAnalysis.lib</span><br><span class="line">LLVMProfileData.lib</span><br><span class="line">LLVMObject.lib</span><br><span class="line">LLVMBitReader.lib</span><br><span class="line">LLVMMCParser.lib</span><br><span class="line">LLVMMCDisassembler.lib</span><br><span class="line">LLVMMC.lib</span><br><span class="line">LLVMBinaryFormat.lib</span><br><span class="line">LLVMDebugInfoCodeView.lib</span><br><span class="line">LLVMDebugInfoMSF.lib</span><br><span class="line">psapi.lib</span><br><span class="line">uuid.lib</span><br><span class="line">advapi32.lib</span><br><span class="line">delayimp.lib</span><br><span class="line">LLVMDemangle.lib</span><br><span class="line">kernel32.lib</span><br><span class="line">user32.lib</span><br><span class="line">gdi32.lib</span><br><span class="line">winspool.lib</span><br><span class="line">oleaut32.lib</span><br><span class="line">comdlg32.lib</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
  </entry>
  <entry>
    <title>Ninja复制文件</title>
    <url>/2020/07/31/Ninja%E5%A4%8D%E5%88%B6%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="ninja复制文件"><a class="markdownIt-Anchor" href="#ninja复制文件"></a> Ninja复制文件</h1>
<span id="more"></span>
<h3 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rule copy</span><br><span class="line">    command = copy $in $out</span><br></pre></td></tr></table></figure>
<p>提示CreateProcess failed: The system cannot find the file specified.</p>
<h3 id="原因"><a class="markdownIt-Anchor" href="#原因"></a> 原因</h3>
<p>ninja在windows使用CreateProcess启动命令，copy是cmd的内置命令没有可执行文件</p>
<h3 id="方案"><a class="markdownIt-Anchor" href="#方案"></a> 方案</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rule copy</span><br><span class="line">    command = cmd /c copy $in $out</span><br></pre></td></tr></table></figure>
<p>linux下使用 sh -c</p>
]]></content>
  </entry>
  <entry>
    <title>Pacman缺失icu4c-59库问题</title>
    <url>/2017/11/29/Pacman%E7%BC%BA%E5%A4%B1icu4c-59%E5%BA%93%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="pacman缺失icu4c-59库"><a class="markdownIt-Anchor" href="#pacman缺失icu4c-59库"></a> Pacman缺失icu4c-59库</h1>
<span id="more"></span>
<p>  问题是在树莓派上的发生的，系统是arch linux，架构是armv7。首先需要下载在<a href="http://site.icu-project.org/"><strong>官网</strong></a>下载icu源码，在编译时遇到了以下两个问题。</p>
<h2 id="1-xlocaleh"><a class="markdownIt-Anchor" href="#1-xlocaleh"></a> 1. xlocale.h</h2>
<p>  缺失&lt;xlocale.h&gt;文件，在编译前在source文件夹内输入一下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s/xlocale/locale/&#x27; i18n/digitlst.cpp</span><br></pre></td></tr></table></figure>
<p>之后再configure</p>
<h2 id="2-loading-library-libicudataso59-error-internal-error"><a class="markdownIt-Anchor" href="#2-loading-library-libicudataso59-error-internal-error"></a> 2. loading library libicudata.so.59 error: internal error</h2>
<p>  在archlinuxarm中有一个补丁需要安装，可以通过直接修改文件/source/config/mh-linux中LDFLAGSICUDT避免错误，修改后如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#LDFLAGSICUDT=-nodefaultlibs -nostdlib </span><br><span class="line">LDFLAGSICUDT=</span><br></pre></td></tr></table></figure>
<p>  最后问题产生是因为使用了pacman -Sy而没有用pacman -Syu导致的，使用pacman -Sy后我更新了icu导致原来pacman依赖缺失，重新编译了icu后再用pacman -Syu修复了pacman的问题。</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>VPN简介-2</title>
    <url>/2021/01/02/VPN%E7%AE%80%E4%BB%8B-2/</url>
    <content><![CDATA[<h1 id="vpn简介-2"><a class="markdownIt-Anchor" href="#vpn简介-2"></a> VPN简介-2</h1>
<span id="more"></span>
<p>以wireguard为例搭建一个VPN,通过VPN隧道来访问网站</p>
<h2 id="环境"><a class="markdownIt-Anchor" href="#环境"></a> 环境</h2>
<p>客户端: Window10</p>
<p>服务器: Debian9</p>
<h2 id="服务器配置流程"><a class="markdownIt-Anchor" href="#服务器配置流程"></a> 服务器配置流程</h2>
<h3 id="安装wireguard服务"><a class="markdownIt-Anchor" href="#安装wireguard服务"></a> 安装wireguard服务</h3>
<p>服务器使用的是腾讯云本身没有wireguard模块,需要自己安装.一是可以通过dkms去加载内核模块,二是使用wireguard源码编译一个可执行文件直接运行.第一种方法没有成功,所以这里使用第二种方法,使用wireguard-go的源码编译程序后上传到服务器(wireguard-go不需要cgo,交叉编译较为容易),此处省略编译上传过程</p>
<p>wireguard主程序是一个独立服务,启动时无法配置.需要通过命名管道去配置一些参数,所以还需要安装一个工具去了连接管道配置参数,这里通过添加apt源安装(服务器是树莓派需要下载wireguard-tools的源码编译)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo sh -c &quot;echo &#x27;deb http://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main non-free contrib&#x27; &gt; /etc/apt/sources.list.d/buster-backports.list&quot;</span><br><span class="line"></span><br><span class="line">apt update</span><br><span class="line"></span><br><span class="line">apt install wireguard</span><br><span class="line"></span><br><span class="line">wg</span><br></pre></td></tr></table></figure>
<p>安装成功后可以通过wg命令去配置管道</p>
<h3 id="配置wireguard服务"><a class="markdownIt-Anchor" href="#配置wireguard服务"></a> 配置wireguard服务</h3>
<h4 id="1-运行wireguard"><a class="markdownIt-Anchor" href="#1-运行wireguard"></a> 1 运行wireguard</h4>
<p>wireguard为编译后上传的可执行文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./wireguard wg0</span><br><span class="line"># ./wireguard -f wg0 可以输出日志方便查看</span><br></pre></td></tr></table></figure>
<h4 id="2-配置虚拟网卡ip"><a class="markdownIt-Anchor" href="#2-配置虚拟网卡ip"></a> 2 配置虚拟网卡ip</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip address add dev wg0 192.168.10.1/24</span><br><span class="line">ip address</span><br></pre></td></tr></table></figure>
<h4 id="3-wireguard配置文件"><a class="markdownIt-Anchor" href="#3-wireguard配置文件"></a> 3 wireguard配置文件</h4>
<p>生成服务端密钥</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wg genkey | tee privatekey | wg pubkey &gt; publickey</span><br></pre></td></tr></table></figure>
<p>wireguard配置可以使用命令或文件,这里使用配置文件</p>
<p>wg.conf</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Interface]</span><br><span class="line">PrivateKey = 0FWdp50XUeH7XFrSA9e1JrZvzytikKgCEyH2g7Bg20o=</span><br><span class="line">ListenPort = 50000</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">PublicKey = poYI/bSXkohf879nUQ4jsNUTGZ4pPiseTePuQ1W4ZyU=</span><br><span class="line">AllowedIPs = 0.0.0.0/0</span><br></pre></td></tr></table></figure>
<p>注意Peer的公钥是由客户端产生的</p>
<p>开启虚拟网卡</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip link set up dev wg0</span><br><span class="line">ip link</span><br></pre></td></tr></table></figure>
<p>设置wireguard配置,设置可以随时更改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wg setconf wg0 wg.conf</span><br><span class="line">wg</span><br></pre></td></tr></table></figure>
<p>配置NAT规则</p>
<p>开启内核转发</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;1&quot; &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure>
<p>开启SNAT转发(只是通过隧道组建局域网可以不开启转发)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -t nat -A POSTROUTING -s 192.168.10.0/24 -o eth0 -j MASQUERADE</span><br><span class="line">iptables -L -t nat</span><br></pre></td></tr></table></figure>
<h2 id="客户端配置流程"><a class="markdownIt-Anchor" href="#客户端配置流程"></a> 客户端配置流程</h2>
<p>下载wireguard-windows添加隧道配置,这里产生的公钥需要为上面服务端的peer公钥</p>
<p>配置文件如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Interface]</span><br><span class="line">PrivateKey = kFkmwxCPPtjcfe28DzynqST67+tPuLULPWdhIPDExmo=</span><br><span class="line">Address = 192.168.10.2/32</span><br><span class="line">DNS = 8.8.8.8</span><br><span class="line"></span><br><span class="line">[Peer]</span><br><span class="line">PublicKey = zWbkynXpzm1oW44dz8eguba5dO3MluJGhBkp7OIozgQ=</span><br><span class="line">AllowedIPs = 0.0.0.0/0</span><br><span class="line">Endpoint = &#123;server_ip&#125;:50000</span><br><span class="line">PersistentKeepalive = 20</span><br></pre></td></tr></table></figure>
<p>全部转发需要注意DNS</p>
<p>简单通过ping测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping 192.168.10.1</span><br><span class="line">ping www.baidu.com</span><br></pre></td></tr></table></figure>
<p>ping有回应代表成功,如果没有回应则需要使用wireshark和tcpdump分别在客户端服务端抓包检验一下数据流是否正常,此处略过</p>
<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2>
<p>以上的配置使本机所有的流量都走隧道,实际可以根据情况进行配置.通过wireshark抓包也可以验证这一点.如果只是组建局域网,则只需要再服务端添加新的Peer数据,只需内核转发不需要设置SNAT的规则</p>
]]></content>
  </entry>
  <entry>
    <title>VPN简介-1</title>
    <url>/2020/12/30/VPN%E7%AE%80%E4%BB%8B-1/</url>
    <content><![CDATA[<h1 id="vpn简介-1"><a class="markdownIt-Anchor" href="#vpn简介-1"></a> VPN简介-1</h1>
<span id="more"></span>
<h2 id="时序图"><a class="markdownIt-Anchor" href="#时序图"></a> 时序图</h2>
<p><img src="/images/3.svg" alt="" /></p>
<p>以上时序图为当一个外网机器连接VPN服务后访问内网服务的流程,根据Wireguard的流程绘制</p>
<h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2>
<h3 id="符号"><a class="markdownIt-Anchor" href="#符号"></a> 符号</h3>
<p>(srcip, dstip)代表ip包的源地址和目的地址<br />
(srcip, dstip):(ip1, ip2)冒号代表实际据为一个IP包(实际IP数据已经处理无法直接获得,但VPN程序处理后可以获得)</p>
<h3 id="流程"><a class="markdownIt-Anchor" href="#流程"></a> 流程</h3>
<p>以上时序图为单向数据流,返回数据包逆向即可</p>
<p>1 app发送数据给VPN后的服务器,需要设置路由使该数据经过tun0网卡.(?,e2_ip)代表应用程序知道目的地址</p>
<p>2 ip协议栈通过路由表处理来获得源地址及转发IP包到tun0</p>
<p>3 VPN程序读取tun0网卡的数据</p>
<p>4 VPN程序处理IP包后重新发送</p>
<p>5 VPN程序读取数据,处理后获得实际的IP包发送到tun1</p>
<p>6 tun1将数据包交给IP协议栈处理</p>
]]></content>
  </entry>
  <entry>
    <title>Stylish与FontAwesome冲突</title>
    <url>/2017/09/29/Stylish%E4%B8%8EFontAwesome%E5%86%B2%E7%AA%81/</url>
    <content><![CDATA[<h1 id="stylish与fontawesome冲突"><a class="markdownIt-Anchor" href="#stylish与fontawesome冲突"></a> Stylish与FontAwesome冲突</h1>
<span id="more"></span>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">  font-family: 楷体 !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  设置如上FontAwesome显示为方块，增加如下后正常</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">  font-family: 楷体,&quot;FontAwesome&quot; !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>css</category>
      </categories>
  </entry>
  <entry>
    <title>YUV格式</title>
    <url>/2022/03/19/YUV%E6%A0%BC%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="-swig3-"><a class="markdownIt-Anchor" href="#-swig3-"></a> YUV格式</h1>
<span id="more"></span>
<h2 id="yuv"><a class="markdownIt-Anchor" href="#yuv"></a> YUV</h2>
<p>YUV中Y代表明度信息，UV代表色度信息，其中Y<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\in[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span> U,V<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mo stretchy="false">[</mo><mo>−</mo><mn>0.5</mn><mo separator="true">,</mo><mn>0.5</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\in[-0.5,0.5]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mclose">]</span></span></span></span></p>
<p>YCbCr是YUV的经过缩放和偏移的版本，根据量化范围不同分为limit range和full range</p>
<ol>
<li>limit range Y<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mo stretchy="false">[</mo><mn>16</mn><mo separator="true">,</mo><mn>235</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\in[16,235]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">3</span><span class="mord">5</span><span class="mclose">]</span></span></span></span>,Cb<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mo stretchy="false">[</mo><mn>16</mn><mo separator="true">,</mo><mn>240</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\in[16,240]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>,Cr<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mo stretchy="false">[</mo><mn>16</mn><mo>−</mo><mn>240</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\in[16-240]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord">4</span><span class="mord">0</span><span class="mclose">]</span></span></span></span></li>
<li>full range Y,Cb,Cr<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>255</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\in[0,255]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mclose">]</span></span></span></span></li>
</ol>
<p>YUV转YCbCr limit range进行线性映射即可</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>Y</mi><msup><mrow></mrow><mo mathvariant="normal">′</mo></msup></msup><mo>=</mo><mo stretchy="false">(</mo><mn>235</mn><mo>−</mo><mn>16</mn><mo stretchy="false">)</mo><mo>∗</mo><mi>Y</mi><mo>+</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">Y^{&#x27;} = (235-16)*Y+16
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99248em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.99248em;"><span style="top:-2.99248em;margin-right:0.05em;"><span class="pstrut" style="height:2.57948em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8278285714285715em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">3</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>b</mi><mo>=</mo><mo stretchy="false">(</mo><mn>240</mn><mo>−</mo><mn>16</mn><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mi>U</mi><mo>+</mo><mn>0.5</mn><mo stretchy="false">)</mo><mo>+</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">Cb = (240-16)\times (U+0.5) + 16
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">4</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.10903em;">U</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span></span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>r</mi><mo>=</mo><mo stretchy="false">(</mo><mn>240</mn><mo>−</mo><mn>16</mn><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mi>V</mi><mo>+</mo><mn>0.5</mn><mo stretchy="false">)</mo><mo>+</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">Cr = (240-16)\times (V+0.5) + 16
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">2</span><span class="mord">4</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">6</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">6</span></span></span></span></span></p>
<p>YUV转YCbCr full range同理,不过大部分使用的都是limit range</p>
<h2 id="yuv转rgb"><a class="markdownIt-Anchor" href="#yuv转rgb"></a> YUV转RGB</h2>
<p>YUV转RGB公式不固定,基于BT.601和BT.709的不同标准变换的标准不一样,不过都是用的线性变换</p>
<ol>
<li>BT.601</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>C</mi><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>C</mi><mi>r</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.299</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.587</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.114</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo>−</mo><mn>0.299</mn></mrow><mn>1.772</mn></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo>−</mo><mn>0.587</mn></mrow><mn>1.772</mn></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mn>0.886</mn><mn>1.772</mn></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mn>0.701</mn><mn>1.402</mn></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo>−</mo><mn>0.587</mn></mrow><mn>1.402</mn></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo>−</mo><mn>0.114</mn></mrow><mn>1.402</mn></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>R</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>G</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>B</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[
\begin{matrix}
Y \\
Cb \\
Cr
\end{matrix}
\right]=
\left[
\begin{matrix}
0.299 &amp; 0.587 &amp; 0.114 \\
\frac{-0.299}{1.772} &amp; \frac{-0.587}{1.772} &amp; \frac{0.886}{1.772} \\
\frac{0.701}{1.402} &amp; \frac{-0.587}{1.402} &amp; \frac{-0.114}{1.402} 
\end{matrix}
\right]
\left[
\begin{matrix}
R \\
G \\
B
\end{matrix}
\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">b</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6102160000000003em;vertical-align:-1.5551080000000006em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0551079999999997em;"><span style="top:-4.215108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">9</span><span class="mord">9</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">7</span><span class="mord mtight">7</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">2</span><span class="mord mtight">9</span><span class="mord mtight">9</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.8048919999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">4</span><span class="mord mtight">0</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">7</span><span class="mord mtight">0</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5551080000000006em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0551079999999997em;"><span style="top:-4.215108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord">8</span><span class="mord">7</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">7</span><span class="mord mtight">7</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">5</span><span class="mord mtight">8</span><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.8048919999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">4</span><span class="mord mtight">0</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">5</span><span class="mord mtight">8</span><span class="mord mtight">7</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5551080000000006em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0551079999999997em;"><span style="top:-4.215108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">1</span><span class="mord">4</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">7</span><span class="mord mtight">7</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">8</span><span class="mord mtight">8</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.8048919999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">4</span><span class="mord mtight">0</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">1</span><span class="mord mtight">1</span><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5551080000000006em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<ol start="2">
<li>BT.709</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>Y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>C</mi><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>C</mi><mi>r</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.2126</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.7152</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.0722</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo>−</mo><mn>0.2126</mn></mrow><mn>1.8556</mn></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo>−</mo><mn>0.7152</mn></mrow><mn>1.8556</mn></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mn>0.9278</mn><mn>1.8556</mn></mfrac></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mn>0.7874</mn><mn>1.5748</mn></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo>−</mo><mn>0.7152</mn></mrow><mn>1.5748</mn></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mo>−</mo><mn>0.0722</mn></mrow><mn>1.5748</mn></mfrac></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>R</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>G</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>B</mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left[
\begin{matrix}
Y \\
Cb \\
Cr
\end{matrix}
\right]=
\left[
\begin{matrix}
0.2126 &amp; 0.7152 &amp; 0.0722 \\
\frac{-0.2126}{1.8556} &amp; \frac{-0.7152}{1.8556} &amp; \frac{0.9278}{1.8556} \\
\frac{0.7874}{1.5748} &amp; \frac{-0.7152}{1.5748} &amp; \frac{-0.0722}{1.5748} 
\end{matrix}
\right]
\left[
\begin{matrix}
R \\
G \\
B
\end{matrix}
\right]
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.60004em;vertical-align:-1.55002em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">b</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.6102160000000003em;vertical-align:-1.5551080000000006em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0551079999999997em;"><span style="top:-4.215108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">1</span><span class="mord">2</span><span class="mord">6</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">8</span><span class="mord mtight">5</span><span class="mord mtight">5</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">2</span><span class="mord mtight">1</span><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.8048919999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">5</span><span class="mord mtight">7</span><span class="mord mtight">4</span><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">7</span><span class="mord mtight">8</span><span class="mord mtight">7</span><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5551080000000006em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0551079999999997em;"><span style="top:-4.215108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">7</span><span class="mord">1</span><span class="mord">5</span><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">8</span><span class="mord mtight">5</span><span class="mord mtight">5</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">7</span><span class="mord mtight">1</span><span class="mord mtight">5</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.8048919999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">5</span><span class="mord mtight">7</span><span class="mord mtight">4</span><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">7</span><span class="mord mtight">1</span><span class="mord mtight">5</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5551080000000006em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0551079999999997em;"><span style="top:-4.215108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">7</span><span class="mord">2</span><span class="mord">2</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">8</span><span class="mord mtight">5</span><span class="mord mtight">5</span><span class="mord mtight">6</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">9</span><span class="mord mtight">2</span><span class="mord mtight">7</span><span class="mord mtight">8</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.8048919999999995em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">5</span><span class="mord mtight">7</span><span class="mord mtight">4</span><span class="mord mtight">8</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">0</span><span class="mord mtight">7</span><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5551080000000006em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-4.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">G</span></span></span><span style="top:-1.8099999999999994em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500000000000007em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05002em;"><span style="top:-2.2500000000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.05002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>量化版YCbCr乘相应矩阵即可</p>
<h2 id="yuv数据格式"><a class="markdownIt-Anchor" href="#yuv数据格式"></a> YUV数据格式</h2>
<p>因为YUV的特性,采样时可以通过公用UV来减少采样的数据,同时保证图像质量不会大幅下降,根据公用UV的多少分为以下三种格式</p>
<h3 id="1-yuv444"><a class="markdownIt-Anchor" href="#1-yuv444"></a> 1. YUV444</h3>
<p>一个Y对应一组UV</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">YUV YUV YUV YUV</span><br><span class="line">YUV YUV YUV YUV</span><br></pre></td></tr></table></figure>
<h3 id="2-yuv422"><a class="markdownIt-Anchor" href="#2-yuv422"></a> 2. YUV422</h3>
<p>两个Y对应一组UV</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">YUV Y YUV Y</span><br><span class="line">YUV Y YUV Y</span><br></pre></td></tr></table></figure>
<h3 id="3-yuv420"><a class="markdownIt-Anchor" href="#3-yuv420"></a> 3. YUV420</h3>
<p>四个Y对应一组UV</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">YUV Y YUV Y</span><br><span class="line">Y   Y Y   Y</span><br></pre></td></tr></table></figure>
<p>由于YUV的特性,即使只有Y显示的图像也可以分辨,所以YUV的存储可分为两大类</p>
<ol>
<li>planar: 先存Y后存UV</li>
<li>packed: YUV交错存储</li>
</ol>
<p>其中packed并不常见</p>
<p>以下为常见格式示例</p>
<p>YUV420p</p>
<ol>
<li>I420: YYYYYYYY UU VV</li>
<li>YV12: YYYYYYYY VV UU</li>
</ol>
<p>YUV420sp</p>
<ol>
<li>NV21: YYYYYYYY VU VU</li>
<li>NV12: YYYYYYYY UV UV</li>
</ol>
<h2 id="标准文档"><a class="markdownIt-Anchor" href="#标准文档"></a> 标准文档</h2>
<ol>
<li><a href="/assets/R-REC-BT.601-7-201103-I!!PDF-E.pdf">BT.601</a></li>
<li><a href="/assets/R-REC-BT.709-6-201506-I!!PDF-C.pdf">BT.709</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>docker创建tun设备</title>
    <url>/2021/09/02/docker%E5%88%9B%E5%BB%BAtun%E8%AE%BE%E5%A4%87/</url>
    <content><![CDATA[<h1 id="docker创建tun设备"><a class="markdownIt-Anchor" href="#docker创建tun设备"></a> docker创建tun设备</h1>
<span id="more"></span>
<h2 id="原因"><a class="markdownIt-Anchor" href="#原因"></a> 原因</h2>
<p>docker中创建tun设备，创建tun需要/dev/tun，但docker里面/dev目录下没有设备</p>
<h2 id="方案"><a class="markdownIt-Anchor" href="#方案"></a> 方案</h2>
<p>挂载本机的设备到docker里面，并且添加相关的cap即可，为了简单这里cap_add添加了所有的权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">version: &quot;2.2&quot;</span><br><span class="line">services:</span><br><span class="line">  centos:</span><br><span class="line">    image: centos:7</span><br><span class="line">    volumes:</span><br><span class="line">      - ./start.sh:/start.sh</span><br><span class="line">    command: sh /start.sh</span><br><span class="line">    cap_add: </span><br><span class="line">      - ALL</span><br><span class="line">    devices:</span><br><span class="line">      - /dev/net/tun:/dev/net/tun</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>gin使用sse</title>
    <url>/2022/01/31/gin%E4%BD%BF%E7%94%A8sse/</url>
    <content><![CDATA[<h1 id="-swig2-"><a class="markdownIt-Anchor" href="#-swig2-"></a> gin使用sse</h1>
<span id="more"></span>
<p>后端代码</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	s := gin.Default()</span><br><span class="line"></span><br><span class="line">	s.GET(<span class="string">&quot;/sse&quot;</span>, <span class="function"><span class="keyword">func</span><span class="params">(c *gin.Context)</span></span> &#123;</span><br><span class="line">		c.Header(<span class="string">&quot;Cache-Control&quot;</span>, <span class="string">&quot;no-store&quot;</span>)</span><br><span class="line">		c.Header(<span class="string">&quot;Content-Type&quot;</span>, <span class="string">&quot;text/event-stream&quot;</span>)</span><br><span class="line">		<span class="keyword">for</span> &#123;</span><br><span class="line">			c.SSEvent(<span class="string">&quot;&quot;</span>, <span class="string">&quot;test&quot;</span>)</span><br><span class="line">			c.Writer.Flush()</span><br><span class="line">			time.Sleep(time.Second)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">	s.Run(<span class="string">&quot;localhost:3000&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>前端代码</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> sse = <span class="keyword">new</span> <span class="title class_">EventSource</span>(<span class="string">&quot;sse&quot;</span>);</span><br><span class="line">sse.<span class="property">onmessage</span> = <span class="function">(<span class="params">evt</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(evt);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>docker安装数据库</title>
    <url>/2020/04/27/docker%E5%AE%89%E8%A3%85%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h1 id="docker安装数据库"><a class="markdownIt-Anchor" href="#docker安装数据库"></a> docker安装数据库</h1>
<span id="more"></span>
<h2 id="mysql"><a class="markdownIt-Anchor" href="#mysql"></a> mysql</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull mysql:5.6</span><br></pre></td></tr></table></figure>
<p>客户端不支持最新的mysql认证方式所以安装5.6</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -p 3306:3306 -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.6</span><br></pre></td></tr></table></figure>
<h2 id="mssql"><a class="markdownIt-Anchor" href="#mssql"></a> mssql</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull mcr.microsoft.com/mssql/server</span><br><span class="line"></span><br><span class="line">docker run -e &quot;ACCEPT_EULA=Y&quot; -e &quot;SA_PASSWORD=Test123456&quot; -p 1433:1433 -d mcr.microsoft.com/mssql/server</span><br></pre></td></tr></table></figure>
<p>不要添加-m的选项</p>
<h2 id="mongodb"><a class="markdownIt-Anchor" href="#mongodb"></a> mongodb</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull mongo</span><br><span class="line"></span><br><span class="line">docker run -p 27017:27017 -d mongo</span><br><span class="line"></span><br><span class="line">docker exec -it containerid &quot;bash&quot;</span><br><span class="line"></span><br><span class="line">mongo</span><br></pre></td></tr></table></figure>
<h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2>
<p>查看数据库是否运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>git Submodule</title>
    <url>/2020/02/19/git%20Submodule/</url>
    <content><![CDATA[<h1 id="git-submodule使用"><a class="markdownIt-Anchor" href="#git-submodule使用"></a> git Submodule使用</h1>
<span id="more"></span>
<h2 id="问题描述"><a class="markdownIt-Anchor" href="#问题描述"></a> 问题描述</h2>
<p>将现有git管理项目的一个子项目单独移除作为新的仓库管理，假如该子目录为dist</p>
<h2 id="解决方法"><a class="markdownIt-Anchor" href="#解决方法"></a> 解决方法</h2>
<h3 id="1从git主项目移除dist目录"><a class="markdownIt-Anchor" href="#1从git主项目移除dist目录"></a> 1.从git主项目移除dist目录</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git rm -r --cached dist</span><br></pre></td></tr></table></figure>
<h3 id="2将dist目录初始化为新的git仓库"><a class="markdownIt-Anchor" href="#2将dist目录初始化为新的git仓库"></a> 2.将dist目录初始化为新的git仓库</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd dist</span><br><span class="line">git init</span><br></pre></td></tr></table></figure>
<h3 id="3git主项目使用git-submodule添加子项目"><a class="markdownIt-Anchor" href="#3git主项目使用git-submodule添加子项目"></a> 3.git主项目使用git submodule添加子项目</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git submodule add ./dist</span><br></pre></td></tr></table></figure>
<h2 id="git-submodule用法"><a class="markdownIt-Anchor" href="#git-submodule用法"></a> git submodule用法</h2>
<h3 id="1从外部项目获取git-submodule"><a class="markdownIt-Anchor" href="#1从外部项目获取git-submodule"></a> 1.从外部项目获取git submodule</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git submodule add &lt;repository&gt; &lt;path&gt;</span><br></pre></td></tr></table></figure>
<h3 id="2克隆完整项目"><a class="markdownIt-Anchor" href="#2克隆完整项目"></a> 2.克隆完整项目</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone &lt;repository&gt; --recursive</span><br><span class="line">git submodule foreach git pull</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>git</category>
      </categories>
  </entry>
  <entry>
    <title>linux下socket使用示例</title>
    <url>/2022/01/27/linux%E4%B8%8Bsocket%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h1 id="-swig4-"><a class="markdownIt-Anchor" href="#-swig4-"></a> linux下socket使用示例</h1>
<span id="more"></span>
<h1 id="linux下socket示例"><a class="markdownIt-Anchor" href="#linux下socket示例"></a> linux下socket示例</h1>
<h2 id="udp服务示例"><a class="markdownIt-Anchor" href="#udp服务示例"></a> UDP服务示例</h2>
<p>1 创建socket</p>
<p>2 bind地址</p>
<p>3 接受发送消息</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="type">int</span> sfd = socket(AF_INET, SOCK_DGRAM, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (sfd == <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;socket error&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  sockaddr_in addr;</span><br><span class="line">  addr.sin_family = AF_INET;</span><br><span class="line">  addr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line">  addr.sin_port = htons(<span class="number">10000</span>);</span><br><span class="line">  <span class="type">int</span> err = bind(sfd, (sockaddr*)&amp;addr, <span class="keyword">sizeof</span>(addr));</span><br><span class="line">  <span class="keyword">if</span> (err == <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;bind error&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="type">char</span> buffer[<span class="number">2000</span>];</span><br><span class="line">  <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">    sockaddr_in client;</span><br><span class="line">    <span class="type">socklen_t</span> client_len = <span class="keyword">sizeof</span>(client);</span><br><span class="line">    <span class="keyword">auto</span> len = recvfrom(sfd, buffer, <span class="number">1000</span>, <span class="number">0</span>, (sockaddr*)&amp;client, &amp;client_len);</span><br><span class="line">    buffer[len] = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;read from %s %d\n&quot;</span>, inet_ntoa(client.sin_addr), client.sin_port);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;read %s\n&quot;</span>, buffer);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用以下命令测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;hello&quot; &gt; /dev/udp/127.0.0.1/10000</span><br></pre></td></tr></table></figure>
<h2 id="tcp服务示例"><a class="markdownIt-Anchor" href="#tcp服务示例"></a> TCP服务示例</h2>
<p>1 创建socket</p>
<p>2 bind地址</p>
<p>3 listen进入监听状态</p>
<p>4 accept接收连接</p>
<p>5 使用epoll管理连接（非必须）</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;arpa/inet.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;netinet/in.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/epoll.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/socket.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;thread&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">  <span class="keyword">auto</span> sfd = socket(AF_INET, SOCK_STREAM, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (sfd == <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;socket error\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  sockaddr_in addr = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">  addr.sin_family = AF_INET;</span><br><span class="line">  addr.sin_addr.s_addr = inet_addr(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line">  addr.sin_port = htons(<span class="number">10000</span>);</span><br><span class="line">  <span class="type">int</span> err = bind(sfd, (sockaddr*)&amp;addr, <span class="keyword">sizeof</span>(sockaddr));</span><br><span class="line">  <span class="keyword">if</span> (err &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;bind error\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  err = listen(sfd, <span class="number">50</span>);</span><br><span class="line">  <span class="keyword">if</span> (err == <span class="number">-1</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;listen error %d %s\n&quot;</span>, errno, strerror(errno));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">auto</span> efd = epoll_create(<span class="number">1</span>);</span><br><span class="line">  <span class="built_in">std</span>::thread <span class="title function_">task_print</span><span class="params">([efd]() &#123;</span></span><br><span class="line"><span class="params">    epoll_event events[<span class="number">20</span>];</span></span><br><span class="line"><span class="params">    <span class="type">char</span> buffer[<span class="number">1000</span>];</span></span><br><span class="line"><span class="params">    <span class="keyword">for</span> (;;) &#123;</span></span><br><span class="line"><span class="params">      <span class="keyword">auto</span> fds = epoll_wait(efd, events, <span class="number">20</span>, <span class="number">-1</span>);</span></span><br><span class="line"><span class="params">      <span class="keyword">if</span> (fds == <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="params">        <span class="built_in">printf</span>(<span class="string">&quot;epoll_wait error %d %s\n&quot;</span>, errno, strerror(errno));</span></span><br><span class="line"><span class="params">        <span class="keyword">continue</span>;</span></span><br><span class="line"><span class="params">      &#125;</span></span><br><span class="line"><span class="params">      <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; fds; i++) &#123;</span></span><br><span class="line"><span class="params">        <span class="keyword">if</span> (events[i].events &amp; EPOLLRDHUP) &#123;</span></span><br><span class="line"><span class="params">          epoll_ctl(efd, EPOLL_CTL_DEL, events[i].data.fd, &amp;events[i]);</span></span><br><span class="line"><span class="params">        &#125;</span></span><br><span class="line"><span class="params">        <span class="keyword">if</span> (events[i].events &amp; EPOLLIN) &#123;</span></span><br><span class="line"><span class="params">          <span class="keyword">auto</span> len = recv(events[i].data.fd, buffer, <span class="number">3</span>, <span class="number">0</span>);</span></span><br><span class="line"><span class="params">          buffer[len] = <span class="number">0</span>;</span></span><br><span class="line"><span class="params">          <span class="built_in">printf</span>(<span class="string">&quot;read %s\n&quot;</span>, buffer);</span></span><br><span class="line"><span class="params">        &#125;</span></span><br><span class="line"><span class="params">      &#125;</span></span><br><span class="line"><span class="params">    &#125;</span></span><br><span class="line"><span class="params">  &#125;)</span>;</span><br><span class="line">  <span class="keyword">for</span> (;;) &#123;</span><br><span class="line">    <span class="type">int</span> connfd;</span><br><span class="line">    sockaddr_in client_addr;</span><br><span class="line">    <span class="type">socklen_t</span> client_addr_len = <span class="keyword">sizeof</span>(client_addr);</span><br><span class="line">    <span class="keyword">if</span> ((connfd = accept(sfd, (sockaddr*)&amp;client_addr, &amp;client_addr_len)) ==</span><br><span class="line">        <span class="number">-1</span>) &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;error\n&quot;</span>);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    epoll_event evt;</span><br><span class="line">    evt.events = EPOLLIN | EPOLLRDHUP;</span><br><span class="line">    evt.data.fd = connfd;</span><br><span class="line">    err = epoll_ctl(efd, EPOLL_CTL_ADD, connfd, &amp;evt);</span><br><span class="line">    <span class="keyword">if</span> (err == <span class="number">-1</span>) &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;epoll_ctl add error %d %s\n&quot;</span>, errno, strerror(errno));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>使用以下命令测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;hello&quot; &gt; /dev/tcp/127.0.0.1/10000</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>linux分区扩容</title>
    <url>/2022/01/27/linux%E5%88%86%E5%8C%BA%E6%89%A9%E5%AE%B9/</url>
    <content><![CDATA[<h1 id="-swig4-"><a class="markdownIt-Anchor" href="#-swig4-"></a> linux分区扩容</h1>
<span id="more"></span>
<p>电脑上装linux的硬盘太小了，最近买了一块大硬盘想把装linux的系统重新复制进去再扩展以下分区，记录一下解决方案</p>
<h2 id="步骤"><a class="markdownIt-Anchor" href="#步骤"></a> 步骤</h2>
<h3 id="1-使用dd命令进行硬盘对拷"><a class="markdownIt-Anchor" href="#1-使用dd命令进行硬盘对拷"></a> 1 使用dd命令进行硬盘对拷</h3>
<p>需要在u盘安装live linux，之后插入u盘和两块硬盘，进入live linux后使用dd命令复制整个硬盘</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dd if=/dev/nvme0n1 of=/dev/nvme1n1</span><br></pre></td></tr></table></figure>
<h3 id="2-修复分区表"><a class="markdownIt-Anchor" href="#2-修复分区表"></a> 2 修复分区表</h3>
<p>由于两块硬盘大小不一样，使用dd命令后的分区表信息不正确首先使用parted进行修复</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo parted -l</span><br></pre></td></tr></table></figure>
<p>输入Fix修复</p>
<h3 id="3-扩展分区"><a class="markdownIt-Anchor" href="#3-扩展分区"></a> 3 扩展分区</h3>
<p>使用fdisk选择需要修改的硬盘</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo fdisk /dev/nvme1n1</span><br></pre></td></tr></table></figure>
<p>d 删除需要扩容的分区<br />
n 进行重建分区，需要确保起始位置和删除前一样，出现Do you want to remove the signature是选N<br />
w 保存分区表<br />
调整完分区表还需要调整分区的信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e2fsck -f /dev/nvme1n1p1</span><br><span class="line">resize2fs /dev/nvme1n1p1</span><br></pre></td></tr></table></figure>
<p>调整完成后使用新硬盘启动即可<br />
注：如果不是很懂分区表一定要小心，最好在虚拟机上尝试过后在操作</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>qemu运行linux内核</title>
    <url>/2021/09/02/qemu%E8%BF%90%E8%A1%8Clinux%E5%86%85%E6%A0%B8/</url>
    <content><![CDATA[<h1 id="qemu运行linux内核"><a class="markdownIt-Anchor" href="#qemu运行linux内核"></a> qemu运行linux内核</h1>
<span id="more"></span>
<h2 id="准备内核"><a class="markdownIt-Anchor" href="#准备内核"></a> 准备内核</h2>
<p>由于实体机是linux，我直接使用/boot目录下vmlinuz-5.4.0-81-generic现有的内核，当然下载内核源码进行编译也是可以的</p>
<h2 id="创建文件系统"><a class="markdownIt-Anchor" href="#创建文件系统"></a> 创建文件系统</h2>
<p>内核启动之后需要加载文件系统来启动init进程，所以需要实现准备文件系统和init进程，首先先创建文件系统</p>
<h3 id="1-创建虚拟机磁盘"><a class="markdownIt-Anchor" href="#1-创建虚拟机磁盘"></a> 1 创建虚拟机磁盘</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">qemu-img create -f raw disk.raw 512M</span><br></pre></td></tr></table></figure>
<h3 id="2-格式化文件系统"><a class="markdownIt-Anchor" href="#2-格式化文件系统"></a> 2 格式化文件系统</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkfs -t ext4 ./disk.raw</span><br></pre></td></tr></table></figure>
<p>此时使用以下命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">qemu-system-x86_64 -m 512M -kernel vmlinuz-5.4.0-81-generic -drive format=raw,file=./dist.raw -append &quot;root=/dev/sda&quot;</span><br></pre></td></tr></table></figure>
<p>会提示init文件未找到</p>
<h2 id="创建init进程"><a class="markdownIt-Anchor" href="#创建init进程"></a> 创建init进程</h2>
<h3 id="1-挂载文件系统"><a class="markdownIt-Anchor" href="#1-挂载文件系统"></a> 1 挂载文件系统</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir img</span><br><span class="line">mount -o loop ./disk.raw ./img</span><br></pre></td></tr></table></figure>
<h3 id="2-init进程"><a class="markdownIt-Anchor" href="#2-init进程"></a> 2 init进程</h3>
<p>init进程是系统第一个启动的进程，实际上只要是一个linux里的可执行文件就行，比如hello world</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* main.c */</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line">  fflush(<span class="built_in">stdout</span>);</span><br><span class="line">  <span class="keyword">while</span> (<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译后复制到img目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc -static -o main main.c</span><br><span class="line">cp main img</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">qemu-system-x86_64 -m 512M -kernel vmlinuz-5.4.0-81-generic -drive format=raw,file=./disk.raw -append &quot;root=/dev/sda init=/main&quot;</span><br></pre></td></tr></table></figure>
<p>运行后屏幕会有输出hello world</p>
<h3 id="3-busybox"><a class="markdownIt-Anchor" href="#3-busybox"></a> 3 busybox</h3>
<p>使用以上程序作为init进程并没有实际意义，实际的init需要完成启动后拉起其他进程的功能，例如systemv，busybox等。这里选择busybox作为init进程，主要是由于busybox自身带了shell及相关工具便于使用</p>
<p>1 下载busybox源码，这里使用的版本是1.29.2</p>
<p>2 进入目录编译</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make defconfig</span><br><span class="line">make menuconfig #需要选择编译静态库</span><br><span class="line">make</span><br></pre></td></tr></table></figure>
<p>3 安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make CONFIG_PREFIX=../img install</span><br></pre></td></tr></table></figure>
<p>CONFIG_PREFIX选择上面挂载的目录</p>
<h2 id="启动内核"><a class="markdownIt-Anchor" href="#启动内核"></a> 启动内核</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">qemu-system-x86_64 -m 512M -smp 2 -kernel vmlinuz-5.4.0-81-generic -drive format=raw,file=./disk.raw -append &quot;init=/linuxrc root=/dev/sda&quot; </span><br></pre></td></tr></table></figure>
<p>能够正常启动后可以看到屏幕上有一些错误提示，需要调整一下配置文件</p>
<h2 id="busybox配置"><a class="markdownIt-Anchor" href="#busybox配置"></a> busybox配置</h2>
<p>1 创建配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir ./img/proc</span><br><span class="line">mkdir ./img/sys</span><br><span class="line">mkdir ./img/dev</span><br><span class="line">mkdir -p ./img/etc/init.d</span><br><span class="line">touce ./img/etc/init.d/rcS</span><br><span class="line">chmod u+x ./img/etc/init.d/rcS</span><br></pre></td></tr></table></figure>
<p>2 修改配置文件rcS</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">mount -t proc proc /proc</span><br><span class="line">mount -t sysfs sysfs /sys</span><br><span class="line"><span class="comment"># 文件系统无法修改运行以下命令</span></span><br><span class="line"><span class="comment"># mount -o remount,rw /</span></span><br></pre></td></tr></table></figure>
<p>之后重新启动内核后正常</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>udev更改按键映射</title>
    <url>/2018/03/18/udev%E6%9B%B4%E6%94%B9%E6%8C%89%E9%94%AE%E6%98%A0%E5%B0%84/</url>
    <content><![CDATA[<h1 id="udev更改按键映射"><a class="markdownIt-Anchor" href="#udev更改按键映射"></a> udev更改按键映射</h1>
<span id="more"></span>
<p>通过更改udev的规则实现敲击a键获得s的输出</p>
<h1>安装evtest</h1>
&emsp;&emsp;首先安装evtest检测键盘的扫描码
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># apt install evtest</span><br><span class="line"># sudo evtest</span><br><span class="line">No device specified, trying to scan all of /dev/input/event*</span><br><span class="line">Available devices:</span><br><span class="line">/dev/input/event0:	Power Button</span><br><span class="line">/dev/input/event1:	Lid Switch</span><br><span class="line">/dev/input/event2:	Power Button</span><br><span class="line">/dev/input/event3:	AT Translated Set 2 keyboard</span><br><span class="line">Select the device event number [0-3]:</span><br></pre></td></tr></table></figure>
<p>选择device的数字后，敲击a键可以得到一下信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Event: time 1521361797.053598, type 4 (EV_MSC), code 4 (MSC_SCAN), value 1e</span><br><span class="line">Event: time 1521361797.053598, type 1 (EV_KEY), code 30 (KEY_A), value 1</span><br><span class="line">Event: time 1521361797.053598, SYN_REPORT</span><br><span class="line">aEvent: time 1521361797.148844, type 4 (EV_MSC), code 4 (MSC_SCAN), value 1e</span><br><span class="line">Event: time 1521361797.148844, type 1 (EV_KEY), code 30 (KEY_A), value 0</span><br><span class="line">Event: time 1521361797.148844, SYN_REPORT </span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>  结果进行了简化，第一个SYN_REPORT代表a键按下，第二个SYN_REPORT代表a键松开，其中可以得到a的扫描码为1e</p>
<h1>修改udev</h1>
&emsp;&emsp;使用编辑器编辑udev规则
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># sudo vim /lib/udev/hwdb.d/60-keyboard.hwdb</span><br></pre></td></tr></table></figure>
<p>在文件最后添加以下几行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">evdev:input:b0011v0001p0001*</span><br><span class="line"> KEYBOARD_KEY_1e=a</span><br></pre></td></tr></table></figure>
<p>  第一行为一系列规则代表匹配的设备，其中evdev:input:代表输入设备，后面为一些ID，在evtest中输入device的数字之后会有一行输出为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Input device ID: bus 0x11 vendor 0x1 product 0x1 version 0xab41</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>其中’b0011’,‘v000v’,‘p0001’分别与bus,vendor,product对应，’*'代表了之后的通配符号</p>
<p>  第二行为对设备的映射，行首需要空格否则无效，KEYBOARD_KEY_后跟扫描码，=号右为键值</p>
<h1>更新udev</h1>
&emsp;&emsp;使用以下命令更新，需要将event3换为自己输入的数字
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo udevadm hwdb --update &amp;&amp; sudo udevadm trigger /dev/input/event3</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>u盘安装linux系统</title>
    <url>/2021/09/07/u%E7%9B%98%E5%AE%89%E8%A3%85linux%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h1 id="u盘安装linux系统"><a class="markdownIt-Anchor" href="#u盘安装linux系统"></a> u盘安装linux系统</h1>
<span id="more"></span>
<p>我的目的是在u盘上用efi的方式启动linux，并留相应的空间用于数据交换</p>
<h2 id="分区建立文件系统"><a class="markdownIt-Anchor" href="#分区建立文件系统"></a> 分区建立文件系统</h2>
<h3 id="1-使用fdisk分区"><a class="markdownIt-Anchor" href="#1-使用fdisk分区"></a> 1 使用fdisk分区</h3>
<p>u盘挂载点为/dev/sdb</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Device        Start      End  Sectors  Size Type</span><br><span class="line">/dev/sdb1      2048 16779263 16777216    8G Linux filesystem</span><br><span class="line">/dev/sdb2  16779264 17803263  1024000  500M EFI System</span><br><span class="line">/dev/sdb3  17803264 28289023 10485760    5G Linux filesystem</span><br></pre></td></tr></table></figure>
<p>以上是我的分区结果，这里划分了三个分区，sdb1是用来存储数据的，sdb2是efi分区，sdb3是存放linux的分区</p>
<h3 id="2-建立文件分区"><a class="markdownIt-Anchor" href="#2-建立文件分区"></a> 2 建立文件分区</h3>
<p>sdb1根据需要来建立文件系统，sdb2为fat格式，sdb3为ext4格式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkfs -t ext4 /dev/sdb3</span><br><span class="line">mkfs -t vfat /dev/sdb2</span><br></pre></td></tr></table></figure>
<h2 id="linux内核准备"><a class="markdownIt-Anchor" href="#linux内核准备"></a> linux内核准备</h2>
<p>1 挂载分区</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount -o sync /dev/sdb3 /usb</span><br></pre></td></tr></table></figure>
<p>2 这里还是使用当前系统上已经编译的内核还有initramfs，一般位于/boot目录下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /usb/boot</span><br><span class="line">cp /boot/vmlinuz-5.4.0-81-generic /usb/boot</span><br><span class="line">cp /boot/initrd.img-5.4.0-81-generic /usb/boot</span><br></pre></td></tr></table></figure>
<h2 id="引导程序"><a class="markdownIt-Anchor" href="#引导程序"></a> 引导程序</h2>
<p>引导程序使用grub来创建</p>
<h3 id="1-挂载分区"><a class="markdownIt-Anchor" href="#1-挂载分区"></a> 1 挂载分区</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mount -o sync /dev/sdb2 /efi</span><br></pre></td></tr></table></figure>
<h3 id="2-编写grubcfg"><a class="markdownIt-Anchor" href="#2-编写grubcfg"></a> 2 编写grub.cfg</h3>
<p>grub.cfg位于/efi/grub里</p>
<p>grub.cfg</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menuentry &#x27;Linux(USB)&#x27; &#123;</span><br><span class="line">	insmod ext2</span><br><span class="line">	search --no-floppy --fs-uuid --set=root b77cc5ce-4cf9-4190-ac65-e6d30e8956fa</span><br><span class="line">  linux	/boot/vmlinuz-5.4.0-81-generic root=UUID=b77cc5ce-4cf9-4190-ac65-e6d30e8956fa ro</span><br><span class="line">	initrd	/boot/initrd.img-5.4.0-81-generic</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注：</p>
<p>1 一般grub.cfg是使用grub-mkconfig来创建的，但该命令无法扫描到u盘，所以选择手动创建</p>
<p>2 b77cc5ce-4cf9-4190-ac65-e6d30e8956fa这个/dev/sdb3的uuid可以使用以下命令查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls -l /dev/disk/by-uuid</span><br></pre></td></tr></table></figure>
<h3 id="3-创建引导程序"><a class="markdownIt-Anchor" href="#3-创建引导程序"></a> 3 创建引导程序</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grub-install --efi-directory=/efi --boot-directory=/efi --removable</span><br></pre></td></tr></table></figure>
<p>创建成功后/efi里会多出一个EFI目录，之后如果修改了grub.cfg需要重新运行命令创建</p>
<h2 id="模拟启动"><a class="markdownIt-Anchor" href="#模拟启动"></a> 模拟启动</h2>
<p>此时使用qemu来模拟电脑的启动来测试引导程序是否正常运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">qemu-system-x86_64 /dev/sdb</span><br></pre></td></tr></table></figure>
<p>如果qemu卡死在booting from hard disk或cannot allocate kernel buffer可以参考以下方案</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt-get install ovmf qemu-efi</span><br><span class="line">qemu-system-x86_64 -m 512M --bios /usr/share/qemu/OVMF.fd /dev/sdb -boot menu=on</span><br></pre></td></tr></table></figure>
<p>–bios /usr/share/qemu/OVMF.fd可以解决booting from hard disk卡死问题</p>
<p>-m 512M 可以解决cannot allocate kernel buffer这个问题</p>
<p>-boot menu on这个选项不会影响解决方案，只是留作备忘</p>
<p>正常流程内核启动进入ramfs会由于没有init进程而无法完成启动，至于init的问题就可以通过安装busybox来解决，具体可以参考之前的文章</p>
<h2 id="启动"><a class="markdownIt-Anchor" href="#启动"></a> 启动</h2>
<p>在bios配置相应选项进行启动即可</p>
<h2 id="附录"><a class="markdownIt-Anchor" href="#附录"></a> 附录</h2>
<p>查看挂载点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat /proc/mounts</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>webassembly例子</title>
    <url>/2020/04/15/webassembly%E4%BE%8B%E5%AD%90/</url>
    <content><![CDATA[<h1 id="webassembly例子"><a class="markdownIt-Anchor" href="#webassembly例子"></a> webassembly例子</h1>
<!---more-->
<h2 id="创建服务器"><a class="markdownIt-Anchor" href="#创建服务器"></a> 创建服务器</h2>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;os&quot;</span></span><br><span class="line">	<span class="string">&quot;strconv&quot;</span></span><br><span class="line"></span><br><span class="line">	<span class="string">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	port := <span class="number">8080</span></span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(os.Args) == <span class="number">2</span> &#123;</span><br><span class="line">		port, _ = strconv.Atoi(os.Args[<span class="number">1</span>])</span><br><span class="line">	&#125;</span><br><span class="line">	engine := gin.Default()</span><br><span class="line">	engine.Static(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;.&quot;</span>)</span><br><span class="line">	err := engine.Run(fmt.Sprintf(<span class="string">&quot;0.0.0.0:%d&quot;</span>, port))</span><br><span class="line">	<span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">		fmt.Println(err.Error())</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>正常编译即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">go build -o simpleserver</span><br></pre></td></tr></table></figure>
<h2 id="创建wasm文件"><a class="markdownIt-Anchor" href="#创建wasm文件"></a> 创建wasm文件</h2>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	res := <span class="number">10</span></span><br><span class="line">	fmt.Println(res)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>使用以下命令编译</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GOARCH=wasm GOOS=js go build -o main.wasm</span><br></pre></td></tr></table></figure>
<h2 id="创建前端工程"><a class="markdownIt-Anchor" href="#创建前端工程"></a> 创建前端工程</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp &quot;$(go env GOROOT)/misc/wasm/wasm_exec.js&quot; .</span><br></pre></td></tr></table></figure>
<p>运行wasm文件需要以上js文件支持，如果使用app之类的库可能还需要引入别的js文件，以下为index.html内容</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>/&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;wasm_exec.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">const</span> go = <span class="keyword">new</span> <span class="title class_">Go</span>();</span></span><br><span class="line"><span class="language-javascript">			<span class="title class_">WebAssembly</span>.<span class="title function_">instantiateStreaming</span>(<span class="title function_">fetch</span>(<span class="string">&quot;./main.wasm&quot;</span>), go.<span class="property">importObject</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">				go.<span class="title function_">run</span>(result.<span class="property">instance</span>);</span></span><br><span class="line"><span class="language-javascript">			&#125;);</span></span><br><span class="line"><span class="language-javascript">		</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>将main.wasm，wasm_exec.js，index.html和simpleserver放在同一目录，运行./simpleserver访问页面在浏览器控制台可以看到输出</p>
<h2 id="文档"><a class="markdownIt-Anchor" href="#文档"></a> 文档</h2>
<p><a href="https://github.com/golang/go/wiki/WebAssembly">https://github.com/golang/go/wiki/WebAssembly</a></p>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>zlib使用示例</title>
    <url>/2022/01/31/zlib%E4%BD%BF%E7%94%A8%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h1 id="-swig7-"><a class="markdownIt-Anchor" href="#-swig7-"></a> zlib使用示例</h1>
<span id="more"></span>
<h2 id="tgz简介"><a class="markdownIt-Anchor" href="#tgz简介"></a> tgz简介</h2>
<p>以.tgz(tar.gz的缩写)格式的压缩文件为例,压缩流程如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">files-&gt;tar-&gt;deflate-&gt;gz</span><br></pre></td></tr></table></figure>
<p>files先进行归档成为一个tar格式的文件,之后使用deflate算法对文件进行压缩,最后添加文件头成为gz格式的文件,解压缩相反</p>
<h2 id="zlib简介"><a class="markdownIt-Anchor" href="#zlib简介"></a> zlib简介</h2>
<p>zlib和tgz类似,只是去掉了tar过程同时使用deflate压缩完成后封装成zlib的格式而不是gz格式,流程如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">data-&gt;deflate-&gt;zlib</span><br></pre></td></tr></table></figure>
<p>zlib实现了deflate压缩算法,所以基于deflate的算法进行压缩和封装的格式都可以基于zlib来开发</p>
<h2 id="数据压缩"><a class="markdownIt-Anchor" href="#数据压缩"></a> 数据压缩</h2>
<p>使用zlib压缩同样的字符穿,通过对比压缩数据是否相同来验证,不包含gz和zlib格式的不同</p>
<p>1 使用gzip压缩文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gzip --no-name --keep publickey</span><br></pre></td></tr></table></figure>
<p>文件内容如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PmQvG0XnDZVVSoYJwXgky00A4QVtw9JERaZ7GdNflUU=</span><br></pre></td></tr></table></figure>
<p>2 使用zlib压缩并对比</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;gtest/gtest.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;zlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> g_text[] = <span class="string">&quot;PmQvG0XnDZVVSoYJwXgky00A4QVtw9JERaZ7GdNflUU=&quot;</span>;</span><br><span class="line">TEST(zlib, Compress) &#123;</span><br><span class="line">  ifstream <span class="title function_">file</span><span class="params">(<span class="string">&quot;publickey.gz&quot;</span>)</span>;</span><br><span class="line">  EXPECT_TRUE(file.is_open());</span><br><span class="line">  file.seekg(<span class="number">0</span>, <span class="built_in">std</span>::ios::end);</span><br><span class="line">  <span class="built_in">vector</span>&lt;Bytef&gt; <span class="title function_">content</span><span class="params">(file.tellg() - <span class="number">10</span> - <span class="number">8</span>)</span>;</span><br><span class="line">  file.seekg(<span class="number">10</span>, <span class="built_in">std</span>::ios::beg);</span><br><span class="line">  file.read((<span class="type">char</span>*)&amp;content[<span class="number">0</span>], content.size());</span><br><span class="line">  uLongf dst_size = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">vector</span>&lt;Bytef&gt; zlib_data;</span><br><span class="line">  dst_size = compressBound(<span class="built_in">strlen</span>(g_text));</span><br><span class="line">  zlib_data.resize(dst_size);</span><br><span class="line">  <span class="keyword">if</span> (compress(&amp;zlib_data[<span class="number">0</span>], &amp;dst_size, (<span class="type">const</span> Bytef*)g_text,</span><br><span class="line">               <span class="built_in">strlen</span>(g_text)) != Z_OK) &#123;</span><br><span class="line">    FAIL();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; dst_size - <span class="number">4</span> - <span class="number">2</span>; ++i) &#123;</span><br><span class="line">    <span class="keyword">if</span> (zlib_data[i + <span class="number">2</span>] != content[i]) &#123;</span><br><span class="line">      FAIL();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="解压zip"><a class="markdownIt-Anchor" href="#解压zip"></a> 解压zip</h2>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;contrib/minizip/unzip.h&gt;</span></span></span><br><span class="line">TEST(zlib, unzip) &#123;</span><br><span class="line">  <span class="keyword">auto</span> zip_handle = unzOpen(<span class="string">&quot;publickey.zip&quot;</span>);</span><br><span class="line">  unzOpenCurrentFile(zip_handle);</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt; <span class="title function_">text</span><span class="params">(<span class="number">100</span>)</span>;</span><br><span class="line">  <span class="keyword">auto</span> len = unzReadCurrentFile(zip_handle, &amp;text[<span class="number">0</span>], <span class="number">100</span>);</span><br><span class="line">  text.resize(len);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; text.size(); ++i) &#123;</span><br><span class="line">    <span class="keyword">if</span> (text[i] != g_text[i]) &#123;</span><br><span class="line">      FAIL();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  unzClose(zip_handle);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="解压gz文件"><a class="markdownIt-Anchor" href="#解压gz文件"></a> 解压gz文件</h2>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">TEST(zlib, ungz) &#123;</span><br><span class="line">  <span class="keyword">auto</span> gz_handle = gzopen(<span class="string">&quot;publickey.gz&quot;</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="type">char</span>&gt; <span class="title function_">text</span><span class="params">(<span class="number">100</span>)</span>;</span><br><span class="line">  <span class="keyword">auto</span> len = gzread(gz_handle, &amp;text[<span class="number">0</span>], <span class="number">100</span>);</span><br><span class="line">  text.resize(len);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> i = <span class="number">0</span>; i &lt; text.size(); ++i) &#123;</span><br><span class="line">    <span class="keyword">if</span> (text[i] != g_text[i]) &#123;</span><br><span class="line">      FAIL();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  gzclose(gz_handle);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>fd</tag>
        <tag>fs</tag>
      </tags>
  </entry>
  <entry>
    <title>webassembly例子2</title>
    <url>/2020/04/18/webassembly%E4%BE%8B%E5%AD%902/</url>
    <content><![CDATA[<h1 id="webassembly例子2"><a class="markdownIt-Anchor" href="#webassembly例子2"></a> webassembly例子2</h1>
<span id="more"></span>
<h2 id="go向js中注册函数"><a class="markdownIt-Anchor" href="#go向js中注册函数"></a> go向js中注册函数</h2>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;syscall/js&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calcpi</span><span class="params">(n <span class="type">int</span>)</span></span> <span class="type">float64</span> &#123;</span><br><span class="line">	pi := <span class="number">0.0</span></span><br><span class="line">	flag := <span class="number">1.0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		pi += flag * (<span class="number">1.0</span> / (<span class="number">2.0</span>*<span class="type">float64</span>(i) + <span class="number">1</span>))</span><br><span class="line">		flag = -flag</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> pi * <span class="number">4.0</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calcpiWrapper</span><span class="params">(this js.Value, args []js.Value)</span></span> <span class="keyword">interface</span>&#123;&#125; &#123;</span><br><span class="line">	n := args[<span class="number">0</span>].Int()</span><br><span class="line">	<span class="keyword">return</span> calcpi(n)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	c := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">bool</span>)</span><br><span class="line">	js.Global().Set(<span class="string">&quot;calcpigo&quot;</span>, js.FuncOf(calcpiWrapper))</span><br><span class="line">	&lt;-c</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>在js中注册go函数的方法和把c函数注册到python，lua方法类似，但go需要使用channel来保证main函数不会结束，否则在浏览器中调用注册的函数会提示go的运行库已经结束</p>
<h2 id="前端"><a class="markdownIt-Anchor" href="#前端"></a> 前端</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;wasm_exec.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">function</span> <span class="title function_">calcpi</span>(<span class="params">n</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">let</span> pi = <span class="number">0.0</span></span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">let</span> flag = <span class="number">1</span></span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span></span><br><span class="line"><span class="language-javascript">				pi += flag * (<span class="number">1.0</span> / (<span class="number">2.0</span> * i + <span class="number">1.0</span>))</span></span><br><span class="line"><span class="language-javascript">				flag = -flag</span></span><br><span class="line"><span class="language-javascript">			&#125;</span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">return</span> pi * <span class="number">4</span></span></span><br><span class="line"><span class="language-javascript">		&#125;</span></span><br><span class="line"><span class="language-javascript">		<span class="keyword">const</span> go = <span class="keyword">new</span> <span class="title class_">Go</span>();</span></span><br><span class="line"><span class="language-javascript">		<span class="title class_">WebAssembly</span>.<span class="title function_">instantiateStreaming</span>(<span class="title function_">fetch</span>(<span class="string">&quot;./main.wasm&quot;</span>), go.<span class="property">importObject</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">result</span>) =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-javascript">			go.<span class="title function_">run</span>(result.<span class="property">instance</span>);</span></span><br><span class="line"><span class="language-javascript">			<span class="keyword">let</span> n = <span class="number">1000000000</span></span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">&quot;go&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">calcpigo</span>(n))</span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">&quot;go&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">console</span>.<span class="title function_">time</span>(<span class="string">&quot;js&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">calcpi</span>(n))</span></span><br><span class="line"><span class="language-javascript">			<span class="variable language_">console</span>.<span class="title function_">timeEnd</span>(<span class="string">&quot;js&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">		&#125;);</span></span><br><span class="line"><span class="language-javascript">	</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在js中实现了一个同样效果的函数，对比了一下webassembly与js的速度，但是发现webassembly居然比js慢，不知道是什么原因</p>
<h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2>
<p>go还有许多库使用以上的方法将一些js库绑定成go的库，使得go有可以直接调用js的能力</p>
]]></content>
      <categories>
        <category>go</category>
      </categories>
  </entry>
  <entry>
    <title>webrtc简介</title>
    <url>/2020/04/26/webrtc%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="webrtc简介"><a class="markdownIt-Anchor" href="#webrtc简介"></a> webrtc简介</h1>
<span id="more"></span>
<h2 id="示例"><a class="markdownIt-Anchor" href="#示例"></a> 示例</h2>
<p>webrtc提供一个标准用于在两个端点之间进行数据传送，本文以浏览器端RTCPeerConnection对webrtc实现来说明</p>
<p>以下是一个简单的示例(typescript)，通过datachannel来传递数据</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getCandidate</span>(<span class="params">pc: RTCPeerConnection</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>&lt;<span class="title class_">RTCIceCandidate</span>&gt;(<span class="function">(<span class="params">resolve, reject</span>)=&gt;</span>&#123;</span><br><span class="line">        pc.<span class="property">onicecandidate</span> = <span class="function">(<span class="params">ev</span>)=&gt;</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(ev.<span class="property">candidate</span>)&#123;</span><br><span class="line">                <span class="title function_">resolve</span>(ev.<span class="property">candidate</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建端点1</span></span><br><span class="line"><span class="keyword">let</span> pc1 = <span class="keyword">new</span> <span class="title class_">RTCPeerConnection</span>()</span><br><span class="line"><span class="comment">//创建端点2</span></span><br><span class="line"><span class="keyword">let</span> pc2 = <span class="keyword">new</span> <span class="title class_">RTCPeerConnection</span>()</span><br><span class="line"></span><br><span class="line">pc2.<span class="property">ondatachannel</span> = <span class="function">(<span class="params">chan</span>)=&gt;</span>&#123;</span><br><span class="line">    chan.<span class="property">channel</span>.<span class="title function_">send</span>(<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> chan = pc1.<span class="title function_">createDataChannel</span>(<span class="string">&quot;test&quot;</span>)</span><br><span class="line">chan.<span class="property">onmessage</span> = <span class="function">(<span class="params">ev</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`<span class="subst">$&#123;ev.data&#125;</span> world`</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pc1.<span class="property">onicecandidate</span> = <span class="function">(<span class="params">ev</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ev.<span class="property">candidate</span>)&#123;</span><br><span class="line">        pc2.<span class="title function_">addIceCandidate</span>(ev.<span class="property">candidate</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> task1 = <span class="title function_">getCandidate</span>(pc1)</span><br><span class="line"><span class="comment">//端点1创建sdp</span></span><br><span class="line"><span class="keyword">let</span> sdp1 = <span class="keyword">await</span> pc1.<span class="title function_">createOffer</span>()</span><br><span class="line"><span class="comment">//端点1设置本地sdp</span></span><br><span class="line">pc1.<span class="title function_">setLocalDescription</span>(sdp1)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> task2 = <span class="title function_">getCandidate</span>(pc2)</span><br><span class="line"><span class="comment">//端点2设置端点1的sdp</span></span><br><span class="line">pc2.<span class="title function_">setRemoteDescription</span>(sdp1)</span><br><span class="line">pc2.<span class="title function_">addIceCandidate</span>(<span class="keyword">await</span> task1)</span><br><span class="line"><span class="comment">//端点2创建应答sdp</span></span><br><span class="line"><span class="keyword">let</span> sdp2 = <span class="keyword">await</span> pc2.<span class="title function_">createAnswer</span>()</span><br><span class="line"><span class="comment">//端点2设置本地sdp</span></span><br><span class="line">pc2.<span class="title function_">setLocalDescription</span>(sdp2)</span><br><span class="line"><span class="keyword">let</span> candidate = <span class="keyword">await</span> task2</span><br><span class="line"></span><br><span class="line"><span class="comment">//端点1设置端点2的sdp</span></span><br><span class="line">pc1.<span class="title function_">setRemoteDescription</span>(sdp2)</span><br><span class="line">pc1.<span class="title function_">addIceCandidate</span>(candidate)</span><br></pre></td></tr></table></figure>
<h2 id="说明"><a class="markdownIt-Anchor" href="#说明"></a> 说明</h2>
<p>1.端点之间是对等的，不论是谁先创建sdp或是后应答都是一样的</p>
<p>2.每个端点需要设置本地sdp与远程sdp</p>
<p>3.添加地址需要在设置远端sdp后</p>
<p>4.应答sdp需要先设置远程sdp</p>
<p>5.webrtc是p2p的，连接不能一对多</p>
<p>5.添加视频与音频track</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> stream = <span class="keyword">await</span> navigator.<span class="property">mediaDevices</span>.<span class="title function_">getUserMedia</span>()</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> track <span class="keyword">of</span> stream.<span class="title function_">getTracks</span>())&#123;</span><br><span class="line">    pc1.<span class="title function_">addTrack</span>(track)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2>
<h3 id="1两个端点之间是怎么样交换sdp与candidate"><a class="markdownIt-Anchor" href="#1两个端点之间是怎么样交换sdp与candidate"></a> 1.两个端点之间是怎么样交换sdp与candidate</h3>
<p>以上的例子中因为两个端点都在可以互相访问，可以直接设置。但实际是需要一个公共服务器（Signal Server），通过与这个服务器建立连接来交换sdp及candidate</p>
<h3 id="2端点之间如何互通"><a class="markdownIt-Anchor" href="#2端点之间如何互通"></a> 2.端点之间如何互通</h3>
<p>创建sdp时，会获取当前端点的candidate（可以认为是一个地址，通过ice获得），之后将candidate通过Signal Server发送给另一个端点，远程端点可以通过这个地址直接访问</p>
<h3 id="ice是什么"><a class="markdownIt-Anchor" href="#ice是什么"></a> ice是什么</h3>
<p>ice是一个框架主要包含了（stun，turn），ice属于p2p的一部分，是为了统一nat穿透的解决方案，RTCPeerConnection参数可以设置使用哪种穿透技术，不需要可以不设置</p>
<h3 id="为什么sdp中不包含candidate"><a class="markdownIt-Anchor" href="#为什么sdp中不包含candidate"></a> 为什么sdp中不包含candidate</h3>
<p>传统sdp的是包含candidate的，但是获取candidate可能会费时，所以webrtc采用trickle ice，并行sdp的创建与candidate的获取来节省时间，所以需要分开发送</p>
]]></content>
      <categories>
        <category>web</category>
      </categories>
  </entry>
  <entry>
    <title>代理协议</title>
    <url>/2020/06/30/%E4%BB%A3%E7%90%86%E5%8D%8F%E8%AE%AE/</url>
    <content><![CDATA[<h1 id="代理协议"><a class="markdownIt-Anchor" href="#代理协议"></a> 代理协议</h1>
<span id="more"></span>
<p>记录下自己实现基于tcp传输和aes-256-cfb加密的shadowsocks协议时所遇的一些问题</p>
<h2 id="aes-256-cfb加密"><a class="markdownIt-Anchor" href="#aes-256-cfb加密"></a> aes-256-cfb加密</h2>
<p>该算法需要16byte的iv向量和32byte的密钥进行加密，加密的原文没有长度的限制，解密时可以分段解密，使用这种加密算法可以对tcp流进行加密而不需要增加额外的信息</p>
<h2 id="基于tcp的连接"><a class="markdownIt-Anchor" href="#基于tcp的连接"></a> 基于tcp的连接</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C-&gt;S : stream</span><br><span class="line"></span><br><span class="line">stream = iv + playload</span><br><span class="line"></span><br><span class="line">playload = aes-256-cfb(type + address + port + data)</span><br></pre></td></tr></table></figure>
<p>注：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aes-256-cfb(type + address + port+ data) = aes-256-cfb(type + address + port) + aes-256-cfb(data)</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>Name</th>
<th>Length</th>
<th>Desc</th>
</tr>
</thead>
<tbody>
<tr>
<td>iv</td>
<td>16</td>
<td>用于解密</td>
</tr>
<tr>
<td>type</td>
<td>1</td>
<td>1为ipv4 3为域名 4 为ipv6</td>
</tr>
<tr>
<td>address</td>
<td>x</td>
<td>长度根据type而定 1: 4 ([255,1, 1, 1]), 3: 1+len(hostname) ([3, ‘w’, ‘w’, ‘w’]) ,4: 16</td>
</tr>
<tr>
<td>port</td>
<td>2</td>
<td>大端模式(443=[1, 187])</td>
</tr>
</tbody>
</table>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">S-&gt;C : stream</span><br><span class="line"></span><br><span class="line">stream = iv + playload</span><br><span class="line"></span><br><span class="line">playload = aes-256-cfb(data)</span><br></pre></td></tr></table></figure>
<p>以上所有长度均以byte为单位，S收到C的stream后会使用iv解密playload得到需要进行的tcp连接，完成类似https代理的打洞，之后C发送的所有tcp流加密后直接发送到S即可，如果需要连接不同的address需要建立新的tcp连接。S向C端发送时需要注意此时iv是S端的和C-&gt;S的iv无关，C端收到的流需要使用这个iv进行解密，C端收到的playload仅为加密后的tcp流</p>
]]></content>
      <categories>
        <category>网络</category>
      </categories>
  </entry>
  <entry>
    <title>协程</title>
    <url>/2019/01/24/%E5%8D%8F%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="python协程"><a class="markdownIt-Anchor" href="#python协程"></a> python协程</h1>
<span id="more"></span>
<h2 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景:</h2>
<p>  当发送一个网络请求时，受限于网络环境影响可能需要等待一段时间，但此时cpu是空闲的，此时可以利用cpu处理另外的运算，直到收到服务端的回应继续运算。协程就是处理这种情形的，因此协程需要底层的支持。</p>
<h2 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理:</h2>
<p>  这部分是个人对于协程原理的理解，等执行任务A到达一个不需要cpu但耗时的操作时，可以将A当前状态保存，并返回一个特殊的对象a，这个对象在A的操作完成时发送一个信号使得A可以继续，由于A此时返回了a，释放了当前资源，任务B就可以运行，任务A，B可以理解为task，而对象a可以理解为furture。</p>
<h2 id="实践"><a class="markdownIt-Anchor" href="#实践"></a> 实践：</h2>
<h3 id="1多次请求同一url"><a class="markdownIt-Anchor" href="#1多次请求同一url"></a> 1.多次请求同一url</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import aiohttp</span><br><span class="line">import asyncio</span><br><span class="line">import datetime</span><br><span class="line"></span><br><span class="line">async def test(url):</span><br><span class="line">    async with aiohttp.ClientSession() as session:</span><br><span class="line">        async with session.get(url) as resp:</span><br><span class="line">            print(resp.status, datetime.datetime.now())</span><br><span class="line"></span><br><span class="line">async def main():</span><br><span class="line">    for i in range(10):</span><br><span class="line">        print(i)</span><br><span class="line">        asyncio.create_task(test(&quot;https://google.com&quot;))</span><br><span class="line"></span><br><span class="line">loop = asyncio.get_event_loop()</span><br><span class="line">loop.create_task(main())</span><br><span class="line">loop.run_forever()</span><br></pre></td></tr></table></figure>
<p>  该例子会输出0~9，说明等待响应并没有阻碍下一次请求。需要注意await是让出运行权限，并不会创建task，以下写法不会产生异步的效果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">async def main():</span><br><span class="line">    for i in range(10):</span><br><span class="line">        print(i)</span><br><span class="line">        await asyncio.create_task(test(&quot;https://google.com&quot;))</span><br></pre></td></tr></table></figure>
<p>await不会将task放入循环，反而会让出权限等待task执行完毕</p>
<h3 id="2占有权限"><a class="markdownIt-Anchor" href="#2占有权限"></a> 2.占有权限</h3>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">async def a():</span><br><span class="line">    print(&quot;a start&quot;)</span><br><span class="line">    await asyncio.sleep(1)</span><br><span class="line">    print(&quot;a end&quot;)</span><br><span class="line"></span><br><span class="line">async def b():</span><br><span class="line">    print(&quot;b start&quot;)</span><br><span class="line">    time.sleep(3)</span><br><span class="line">    print(&quot;b end&quot;)</span><br><span class="line"></span><br><span class="line">loop = asyncio.get_event_loop()</span><br><span class="line">loop.run_until_complete(asyncio.wait([a(), b()]))</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>  以下是结果，可以看出a让出使用权限后，即使furture完成，也只能等待b让出权限后才能执行。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a start</span><br><span class="line">b start</span><br><span class="line">b end</span><br><span class="line">a end</span><br></pre></td></tr></table></figure>
<p>并且更换a，b的顺序</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">loop.run_until_complete(asyncio.wait([b(), a()]))</span><br></pre></td></tr></table></figure>
<p>会使协程变成串行失去意义，可以猜想实际loop中有两个队列，一个为task队列，另一个为信号队列，用于指示当前task让出权限后执行的task。</p>
]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title>均匀开B样条</title>
    <url>/2020/08/11/%E5%9D%87%E5%8C%80%E5%BC%80B%E6%A0%B7%E6%9D%A1/</url>
    <content><![CDATA[<h1 id="均匀开b样条"><a class="markdownIt-Anchor" href="#均匀开b样条"></a> 均匀开B样条</h1>
<span id="more"></span>
<h2 id="1-原理"><a class="markdownIt-Anchor" href="#1-原理"></a> 1 原理</h2>
<p>定义红色函数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">f_{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,蓝色函数为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">f_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br />
<img src="/images/1.svg" alt="" /><br />
如果现在我们取<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>R</mi><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">R^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span>中的两个点<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>P</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">P_{1},P_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,定义<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>f</mi><mn>1</mn></msub><mo>⋅</mo><msub><mi>P</mi><mn>1</mn></msub><mo>+</mo><msub><mi>f</mi><mn>2</mn></msub><mo>⋅</mo><msub><mi>P</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">f(x)=f_{1}\cdot P_{1}+ f_{2}\cdot P_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,这样我们就得到了一条曲线，并且由于<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>f</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">f_{1},f_{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是连续的所以曲线也是连续的</p>
<p>如果我们有n个点,那我们就可以选取n个函数，通过计算得到一条曲线<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo>∑</mo><msub><mi>f</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">f(x)=\sum f_{i}\cdot P_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span>的光滑程度与<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">f_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>有关</p>
<p>每个点对应一个函数，这一系列函数称为基函数</p>
<h2 id="2-基函数"><a class="markdownIt-Anchor" href="#2-基函数"></a> 2 基函数</h2>
<p>定义</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mo>≤</mo><mi>x</mi><mo>&lt;</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex"> f_{n,n+1}(x)=
\begin{cases}
1 &amp; n \le x &lt; n+1 \\\\
0 &amp; other 
\end{cases}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9100000000000001em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.1500100000000004em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.30001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-1.5299999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9100000000000001em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p>
<p>当<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>k</mi><mo>&gt;</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">k&gt;1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>递归定义</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>n</mi><mo>+</mo><mi>k</mi></mrow></msub><mo>=</mo><mfrac><mrow><mi>x</mi><mo>−</mo><mi>n</mi></mrow><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></mfrac><msub><mi>f</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>n</mi><mo>+</mo><mi>k</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mi>k</mi><mo>−</mo><mi>x</mi></mrow><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></mfrac><msub><mi>f</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mo>+</mo><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{n,n+k} = \frac{x-n}{k-1}f_{n,n+k-1}+\frac{n+k-x}{k-1}f_{n+1,n+k}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0296600000000002em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2603300000000002em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.14077em;vertical-align:-0.7693300000000001em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7693300000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>其中<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>n</mi><mo>+</mo><mi>k</mi></mrow></msub></mrow><annotation encoding="application/x-tex">f_{n,n+k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>C</mi><mrow><mi>k</mi><mo>−</mo><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">C^{k-2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span>的，并且有</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munderover><mo>∑</mo><mi>i</mi><mrow><mi>i</mi><mo>+</mo><mi>k</mi></mrow></munderover><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>i</mi><mo>+</mo><mi>k</mi></mrow></msub><mo>=</mo><mn>1</mn><mspace width="1em"/><mi>i</mi><mo>+</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><mi>i</mi><mo>+</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">\sum_{i}^{i+k} f_{i,i+k} = 1\quad i+k-1\le x&lt;i+k
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.1137820000000005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span></span></span></span></span></p>
<h2 id="3-均匀开b样条"><a class="markdownIt-Anchor" href="#3-均匀开b样条"></a> 3 均匀开B样条</h2>
<p>设有n个点为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub><mo>…</mo><msub><mi>P</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">P_{1}\dots P_{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，需要次数为p的一个开B样条曲线，由以上条件我们选择<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><mrow><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo>+</mo><mi>p</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>…</mo><msub><mi>f</mi><mrow><mi>n</mi><mo separator="true">,</mo><mi>n</mi><mo>+</mo><mi>p</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">f_{1,1+p+1}\dots f_{n,n+p+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">n</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>作为基函数，于是</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>i</mi><mo>+</mo><mi>p</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">f(x)=\sum_{i=1}^{n} f_{i,i+p+1}(x)\cdot P_{i} 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>因为B样条曲线自变量<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">x</span></span></span></span>取值范围需要满足</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>f</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>i</mi><mo>+</mo><mi>p</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_{i=1}^{n} f_{i,i+p+1}(x)=1
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight">i</span><span class="mbin mtight">+</span><span class="mord mathdefault mtight">p</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p>
<p>所以取值范围为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>+</mo><mn>1</mn><mo>≤</mo><mi>x</mi><mo>&lt;</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">p+1 \le x &lt; n+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathdefault">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>,而为了使曲线存在需满足<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>p</mi><mo>&lt;</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">p &lt; n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">n</span></span></span></span></p>
<h2 id="4-示例"><a class="markdownIt-Anchor" href="#4-示例"></a> 4 示例</h2>
<p><a href="https://examples.tbolp.club/#/bspline">https://examples.tbolp.club/#/bspline</a></p>
]]></content>
  </entry>
  <entry>
    <title>在Chromium里的Blink中添加API</title>
    <url>/2020/12/04/%E5%9C%A8Chromium%E9%87%8C%E7%9A%84Blink%E4%B8%AD%E6%B7%BB%E5%8A%A0API/</url>
    <content><![CDATA[<h1 id="在chromium里的blink中添加api"><a class="markdownIt-Anchor" href="#在chromium里的blink中添加api"></a> 在Chromium里的Blink中添加API</h1>
<span id="more"></span>
<p>我的目标导出js的接口使得可以在页面通过js调用C++的一些方法完成任务</p>
<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2>
<p>关于导出C++接口方法</p>
<p>1 在extension api导出接口方便extension调用</p>
<p>2 在Blink内核中导出接口</p>
<p>我使用方法2完成导出,阅读一下内容可能需要了解Web IDL,Blink GC,Chromium Task等方面的知识,相关的一些资料在最后给出</p>
<h2 id="环境"><a class="markdownIt-Anchor" href="#环境"></a> 环境</h2>
<p>chroumium版本 70.0.3538.513</p>
<h2 id="过程"><a class="markdownIt-Anchor" href="#过程"></a> 过程</h2>
<p>在C++中定义Example类,该类会执行一个耗时操作,完成后调用回调将结果返回</p>
<p>在js里需要构造Example类,添加一个回调函数,然后调用将结果输出</p>
<h3 id="添加目录"><a class="markdownIt-Anchor" href="#添加目录"></a> 添加目录</h3>
<p>在third_party/blink/renderer/modules添加example目录,idl及对应的C++的实现统一放在这个目录</p>
<h3 id="编写idl文件"><a class="markdownIt-Anchor" href="#编写idl文件"></a> 编写IDL文件</h3>
<p>1 WebIDL是一种接口描述规范,可以用来生成一些C++和js之间的转换代码</p>
<p>2 inishedCallback为回调限制的类型,编译时会自动生成一个C++对象V8FinishedCallback与之对应</p>
<p>3 [Constructor]表明该interface可以再js中使用new构造,该属性可以有参数,对应的C++方法为static Example* Create(),Example实例被blink GC管理不需要对应的delete</p>
<p>4 Example需要编写blink::Example与之对应</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">callback FinishedCallback = void(DOMString msg);</span><br><span class="line"></span><br><span class="line">[Constructor]</span><br><span class="line">interface Example &#123;</span><br><span class="line">  boolean Start();</span><br><span class="line">  DOMString Name();</span><br><span class="line">  void OnFinish(FinishedCallback callback);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<h3 id="编写c代码"><a class="markdownIt-Anchor" href="#编写c代码"></a> 编写C++代码</h3>
<p>1 继承ScriptWrappable类可以提供类型描述,并且该类继承GarbageCollectedFinalized,所以Example是一个blink GC对象.类Example声明的方法与idl是对应的,除了构造函数比较特别以外.</p>
<p>2 #include &quot;third_party/blink/renderer/bindings/modules/v8/v8_finished_callback.h&quot;这个文件是根据idl里面callback自动生成的文件,编译后才会有.</p>
<p>3 不要再别的线程里调用js注册的回调函数</p>
<p>以上说明在代码注释里面也有对应</p>
<p>example.h</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#ifndef __EXAMPLE_H__</span><br><span class="line">#define __EXAMPLE_H__</span><br><span class="line">#include &lt;thread&gt;</span><br><span class="line">#include &quot;base/task/post_task.h&quot;</span><br><span class="line">#include &quot;third_party/blink/renderer/bindings/modules/v8/v8_finished_callback.h&quot;</span><br><span class="line">#include &quot;third_party/blink/renderer/platform/bindings/script_wrappable.h&quot;</span><br><span class="line">#include &quot;third_party/blink/renderer/platform/wtf/text/wtf_string.h&quot;</span><br><span class="line"></span><br><span class="line">// 类Example需要放在blink空间里</span><br><span class="line">namespace blink &#123;</span><br><span class="line"></span><br><span class="line">// 类需要继承ScriptWrappable提供类型信息</span><br><span class="line">// ScriptWrappable是一个blink GC管理的类不可以直接delete</span><br><span class="line">class Example final : public ScriptWrappable &#123;</span><br><span class="line">  DEFINE_WRAPPERTYPEINFO();</span><br><span class="line"></span><br><span class="line"> public:</span><br><span class="line">  // js调用new时调用该函数,相当于对外导出的构造函数</span><br><span class="line">  static Example* Create() &#123; return new Example; &#125;</span><br><span class="line">  bool Start() &#123;</span><br><span class="line">    return base::PostTaskAndReply(</span><br><span class="line">        FROM_HERE, base::BindOnce(&amp;Example::startWork, base::Unretained(this)),</span><br><span class="line">        base::BindOnce(&amp;Example::finished, base::Unretained(this)));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  // String与idl文件中DOMString对应</span><br><span class="line">  String Name() &#123; return String(&quot;Example&quot;); &#125;</span><br><span class="line"></span><br><span class="line">  void startWork() &#123; std::this_thread::sleep_for(std::chrono::seconds(10)); &#125;</span><br><span class="line"></span><br><span class="line">  void finished() &#123;</span><br><span class="line">    if (this-&gt;callback_) &#123;</span><br><span class="line">      // 调用js中的回调</span><br><span class="line">      this-&gt;callback_-&gt;InvokeAndReportException(nullptr,</span><br><span class="line">                                                String(&quot;task finished&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  void OnFinish(V8FinishedCallback* callback) &#123; callback_ = callback; &#125;</span><br><span class="line"></span><br><span class="line">  // 因为该类包含需要追踪的类Member&lt;V8FinishedCallback&gt;,该方法必须实现</span><br><span class="line">  void Trace(Visitor* visitor) override &#123;</span><br><span class="line">    visitor-&gt;Trace(callback_);</span><br><span class="line">    ScriptWrappable::Trace(visitor);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ~Example() override = default;</span><br><span class="line"></span><br><span class="line"> private:</span><br><span class="line">  // 保存js注册的回调</span><br><span class="line">  Member&lt;V8FinishedCallback&gt; callback_;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">&#125;  // namespace blink</span><br><span class="line"></span><br><span class="line">#endif</span><br></pre></td></tr></table></figure>
<p><a href="http://example.cc">example.cc</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &quot;example.h&quot;</span><br></pre></td></tr></table></figure>
<h3 id="编写编译文件"><a class="markdownIt-Anchor" href="#编写编译文件"></a> 编写编译文件</h3>
<p>修改的地方比较杂,但是不难理解</p>
<p>1 在third_party/blink/renderer/modules/example里添加以下文件来说明example模块编译的规则</p>
<p><a href="http://BUILD.gn">BUILD.gn</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">import(&quot;//third_party/blink/renderer/modules/modules.gni&quot;)</span><br><span class="line"></span><br><span class="line">blink_modules_sources(&quot;example&quot;) &#123;</span><br><span class="line">  sources = [</span><br><span class="line">    &quot;example.cc&quot;,</span><br><span class="line">    &quot;example.h&quot;,</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>2 在third_party\blink\renderer\modules\BUILD.gn文件的deps变量里添加以下内容确保example模块被编译</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;//third_party/blink/renderer/modules/example&quot;,</span><br></pre></td></tr></table></figure>
<p>3 在third_party\blink\renderer\modules\modules_idl_files.gni文件的modules_idl_files里的get_path_info传入参数中添加以下内容确保idl文件被编译</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;example/example.idl&quot;,</span><br></pre></td></tr></table></figure>
<p>4 在third_party\blink\renderer\bindings\modules\v8\generated.gni文件的generated_modules_callback_function_files变量里添加以下内容确保idl生成的C++文件被编译</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;$bindings_modules_v8_output_dir/v8_finished_callback.cc&quot;,</span><br><span class="line">&quot;$bindings_modules_v8_output_dir/v8_finished_callback.h&quot;,</span><br></pre></td></tr></table></figure>
<h2 id="验证"><a class="markdownIt-Anchor" href="#验证"></a> 验证</h2>
<p>chromium编译成功后在console输入以下语句成功后会在10秒后弹出消息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">example = new Example()</span><br><span class="line">example.OnFinish((msg)=&gt;&#123;alert(msg)&#125;)</span><br><span class="line">example.Start()</span><br></pre></td></tr></table></figure>
<h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2>
<p><a href="https://heycam.github.io/webidl/#idl-types">https://heycam.github.io/webidl/#idl-types</a></p>
<p><a href="https://www.chromium.org/developers/web-idl-interfaces">https://www.chromium.org/developers/web-idl-interfaces</a></p>
<p><a href="https://www.chromium.org/blink/webidl#TOC-Style">https://www.chromium.org/blink/webidl#TOC-Style</a></p>
<p><a href="https://chromium.googlesource.com/chromium/src/+/master/third_party/blink/renderer/platform/heap/BlinkGCAPIReference.md#GarbageCollected">https://chromium.googlesource.com/chromium/src/+/master/third_party/blink/renderer/platform/heap/BlinkGCAPIReference.md#GarbageCollected</a></p>
]]></content>
  </entry>
  <entry>
    <title>树莓派搭建nextcloud</title>
    <url>/2020/05/02/%E6%A0%91%E8%8E%93%E6%B4%BE%E6%90%AD%E5%BB%BAnextcloud/</url>
    <content><![CDATA[<h1 id="树莓派搭建nextcloud"><a class="markdownIt-Anchor" href="#树莓派搭建nextcloud"></a> 树莓派搭建nextcloud</h1>
<span id="more"></span>
<h2 id="硬件环境"><a class="markdownIt-Anchor" href="#硬件环境"></a> 硬件环境</h2>
<p>树莓派3b armv7架构</p>
<h2 id="安装docker"><a class="markdownIt-Anchor" href="#安装docker"></a> 安装docker</h2>
<p>安装后将用户添加到docker组后可以获得docker的权限不需要sudo,之后下载nextcloud的镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com | sh</span><br><span class="line">sudo usermod -aG docker pi</span><br><span class="line">docker pull hub-mirror.c.163.com/arm32v7/nextcloud</span><br></pre></td></tr></table></figure>
<h2 id="准备数据盘"><a class="markdownIt-Anchor" href="#准备数据盘"></a> 准备数据盘</h2>
<p>选取一个分区来保存数据,我是用u盘来保存数据</p>
<h3 id="1设置分区"><a class="markdownIt-Anchor" href="#1设置分区"></a> 1.设置分区</h3>
<p>使用fdisk需要更改分区表即可</p>
<p>格式化分区,需要注意因为nextcloud需要设置权限,所以不要将格式化为其他linux不能进行权限控制的分区,否则无法进行下一步</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkfs.ext4 /dev/sda1</span><br></pre></td></tr></table></figure>
<h3 id="2更改权限"><a class="markdownIt-Anchor" href="#2更改权限"></a> 2.更改权限</h3>
<p>将分区挂载在了~/mnt/data位置,之后更改权限,更改完后使用ls来查看一下是否正确</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd ~/mnt</span><br><span class="line"></span><br><span class="line">sudo mount /dev/sda1 data</span><br><span class="line"></span><br><span class="line">chmod 0770 data</span><br><span class="line"></span><br><span class="line">chown www-data:www-data data</span><br></pre></td></tr></table></figure>
<p>更改完后的权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drwxrwx--- www-data www-data data</span><br></pre></td></tr></table></figure>
<h2 id="启动容器"><a class="markdownIt-Anchor" href="#启动容器"></a> 启动容器</h2>
<p>将主机80端口,挂载的路径映射到容器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -p 80:80 -v ~/mnt/data:/mnt/data hub-mirror.c.163.com/arm32v7/nextcloud</span><br></pre></td></tr></table></figure>
<p>访问树莓派所在的ip在配置保存数据的目录选择映射的路径即可</p>
<h2 id="域名配置"><a class="markdownIt-Anchor" href="#域名配置"></a> 域名配置</h2>
<h4 id="1申请域名"><a class="markdownIt-Anchor" href="#1申请域名"></a> 1.申请域名</h4>
<p>随便选择一个域名供应商申请即可,我是在DNSPod上申请的域名</p>
<h4 id="2nextcloud配置"><a class="markdownIt-Anchor" href="#2nextcloud配置"></a> 2.nextcloud配置</h4>
<p>nextcloud中需要添加受信任的域名,配置文件路径<br />
/var/www/html/config/config.php,如果没有用以下命令查找</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -name &quot;config.php&quot;</span><br></pre></td></tr></table></figure>
<p>在以下位置追加你的域名,注意容器中没有vim之类的编辑器,需自己下载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;trusted_domains&#x27;=&gt;&#123;</span><br><span class="line">    array(</span><br><span class="line">        0 =&gt; xxx.xxx.xxx</span><br><span class="line">        1 =&gt; yyy.yyy.yyy</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3ddns"><a class="markdownIt-Anchor" href="#3ddns"></a> 3.DDNS</h4>
<p>ipv4的公网地址比较难获得,但很多的地方都支持了ipv6（宽带支持路由不一定）,所以使用ipv6作为示例</p>
<p>使用 <a href="https://github.com/TimothyYe/godns">https://github.com/TimothyYe/godns</a> 这个项目来实现ddns,本机(amd64)编译后上传到树莓派,编译参考项目readme,编译时注意加上架构选项,之后使用scp上传到树莓派即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GOARCH=arm GOARM=7 go build</span><br></pre></td></tr></table></figure>
<p>windows下使用cmd编译</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set GOOS=linux</span><br><span class="line">set GOARCH=arm</span><br><span class="line">set GOARM=7</span><br><span class="line">go build</span><br></pre></td></tr></table></figure>
<p>以下是config.json内容</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;provider&quot;</span><span class="punctuation">:</span> <span class="string">&quot;DNSPod&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;login_token&quot;</span><span class="punctuation">:</span> <span class="string">&quot;id,token&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;domains&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;domain_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;xxx.xxx&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sub_domains&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;xxx&quot;</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ipv6_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://api-ipv6.ip.sb/ip&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;ip_type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;IPV6&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>树莓派freeradius服务器</title>
    <url>/2020/01/12/%E6%A0%91%E8%8E%93%E6%B4%BEfreeradius%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    <content><![CDATA[<h1 id="树莓派freeradius服务器"><a class="markdownIt-Anchor" href="#树莓派freeradius服务器"></a> 树莓派freeradius服务器</h1>
<span id="more"></span>
<p>将树莓派作为radiu服务器用来管理网络认证</p>
<p>树莓派使用网线连接路由且设置为静态IP，将路由Wifi认证更改为Radius认证</p>
<h2 id="安装freeradius"><a class="markdownIt-Anchor" href="#安装freeradius"></a> 安装freeradius</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install freeradius</span><br></pre></td></tr></table></figure>
<h2 id="用户配置"><a class="markdownIt-Anchor" href="#用户配置"></a> 用户配置</h2>
<p>使用文件进行用户配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/freeradius/3.0/users</span><br></pre></td></tr></table></figure>
<p>添加用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">test Cleartext-Password != &quot;test&quot;</span><br></pre></td></tr></table></figure>
<h2 id="客户端配置"><a class="markdownIt-Anchor" href="#客户端配置"></a> 客户端配置</h2>
<p>允许路由连接radius服务器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/freeradius/3.0/clients.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">client router&#123;</span><br><span class="line">    ipaddr = 192.168.1.0/24</span><br><span class="line">    secret = qazwsxedc</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="开机启动"><a class="markdownIt-Anchor" href="#开机启动"></a> 开机启动</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl enable freeradius</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>模板用法 1</title>
    <url>/2017/04/01/%E6%A8%A1%E6%9D%BF%E7%94%A8%E6%B3%95%201/</url>
    <content><![CDATA[<h1 id="使用tuple作为函数的参数"><a class="markdownIt-Anchor" href="#使用tuple作为函数的参数"></a> 使用tuple作为函数的参数</h1>
<span id="more"></span>
<p>如果有一个函数和tuple：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int testfun(int i, int j)&#123;</span><br><span class="line">	return i + j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">std::tuple&lt;int, int&gt; args(1, 3);</span><br></pre></td></tr></table></figure>
<p>  如果需要使用tuple作为函数的参数，要在解析tuple的成员之后分别为testfun的参数赋值，由于参数类型和返回类型已知，我们需要在编译期间完成以上工作。<br />
首先定义一个模板函数用来包装testfun，参数1为函数指针，参数2为tuple：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">template&lt;typename R, typename ...Args&gt;</span><br><span class="line">R warpfun(R(*f)(Args...) , std::tuple&lt;Args...&gt; args) &#123;</span><br><span class="line">	return Run&lt;sizeof...(Args), R&gt;::runfun(f, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>因为需要解析tuple的参数类型，采用递归的方式解包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">template&lt;int N, typename R&gt;</span><br><span class="line">struct Run&#123;</span><br><span class="line">	template&lt;typename F, typename T, typename ...Args&gt;</span><br><span class="line">	static R runfun(F f, T t, Args... args) &#123;</span><br><span class="line">		auto i = std::get&lt;N - 1&gt;(t);</span><br><span class="line">		return Run&lt;N - 1, R&gt;::runfun(f, t, i, args...);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">template&lt;typename R&gt;</span><br><span class="line">struct Run&lt;0, R&gt; &#123;</span><br><span class="line">	template&lt;typename F, typename T, typename ...Args&gt;</span><br><span class="line">	static R runfun(F f, T t, Args... args) &#123;</span><br><span class="line">		return f(args...);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>然后在main中直接调用并输出：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">std::cout &lt;&lt; warpfun(testfun, args) &lt;&lt; std::endl;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
  </entry>
  <entry>
    <title>测度论1</title>
    <url>/2022/03/12/%E6%B5%8B%E5%BA%A6%E8%AE%BA1/</url>
    <content><![CDATA[<h1 id="-swig0-"><a class="markdownIt-Anchor" href="#-swig0-"></a> 测度论1</h1>
<span id="more"></span>
<h2 id="i-抽象测度理论"><a class="markdownIt-Anchor" href="#i-抽象测度理论"></a> I 抽象测度理论</h2>
<p>定义1: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>满足</p>
<ol>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>M</mi><mo>⊂</mo><mi>X</mi><mo separator="true">,</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">M\subset X,M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo>−</mo><mi>a</mi><mi>l</mi><mi>g</mi><mi>e</mi><mi>b</mi><mi>r</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\sigma-algebra</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span></span></span></span></p>
</li>
<li>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi><mo>:</mo><mi>M</mi><mo>→</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\mu: M\rightarrow[0, \infty]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">μ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∞</span><span class="mclose">]</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">E_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是可数的不相交的集合</p>
</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>μ</mi><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></munderover><msub><mi>E</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><msub><mi>n</mi><mn>1</mn></msub><mi mathvariant="normal">∞</mi></munderover><mi>μ</mi><mo stretchy="false">(</mo><msub><mi>E</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mu(\sum_{n=1}^{\infty}E_{i})=\sum_{n_1}^{\infty}\mu(E_{i})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.9185100000000004em;vertical-align:-1.267113em;"></span><span class="mord mathdefault">μ</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.882887em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.267113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0015020000000003em;vertical-align:-1.3501049999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.899995em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3501049999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">μ</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>则称X为测度空间，记为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>M</mi><mo separator="true">,</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(X,M,\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span></p>
<p>定义2: <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mo>∗</mo></msub><mo>:</mo><mi>X</mi><mo>→</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">\mu_{*}:X\rightarrow [0, \infty]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∞</span><span class="mclose">]</span></span></span></span>，满足</p>
<ol>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mo>∗</mo></msub><mo stretchy="false">(</mo><mi mathvariant="normal">∅</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\mu_{*}(\emptyset)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">∅</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mn>1</mn></msub><mo>⊂</mo><msub><mi>E</mi><mn>2</mn></msub><mo>⇒</mo><msub><mi>μ</mi><mo>∗</mo></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>≤</mo><msub><mi>μ</mi><mo>∗</mo></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mn>2</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E_{1}\subset E_{2} \Rightarrow \mu_{*}(E_{1})\leq \mu_{*}(E_{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li>
<li><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>E</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">E_{i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是可数则</li>
</ol>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mo>∗</mo></msub><mo stretchy="false">(</mo><msubsup><mo>∪</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></msubsup><msub><mi>E</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>≤</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></munderover><msub><mi>μ</mi><mo>∗</mo></msub><mo stretchy="false">(</mo><msub><mi>E</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mu_{*}(\cup_{j=1}^{\infty}E_{j})\leq \sum_{j=1}^{\infty}\mu_{*}(E_{j})
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.133108em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mbin">∪</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0651740000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p>
<p>则称<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mo>∗</mo></msub></mrow><annotation encoding="application/x-tex">\mu_{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span></span></span></span>的外测度</p>
<p>定义3：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>⊂</mo><mi>X</mi><mo separator="true">,</mo><mi mathvariant="normal">∀</mi><mi>A</mi></mrow><annotation encoding="application/x-tex">E\subset X,\forall A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∀</span><span class="mord mathdefault">A</span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mo>∗</mo></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>μ</mi><mo>∗</mo></msub><mo stretchy="false">(</mo><mi>E</mi><mo>∩</mo><mi>A</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>μ</mi><mo>∗</mo></msub><mo stretchy="false">(</mo><msup><mi>E</mi><mi>c</mi></msup><mo>∪</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mu_{*}(A)=\mu_{*}(E\cap A)+\mu_{*}(E^{c}\cup A)
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">A</span><span class="mclose">)</span></span></span></span></span></p>
<p>则称<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>a</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>o</mi><mi>d</mi><mi>o</mi><mi>r</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Caratheodory</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>可测</p>
<p>所有<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>C</mi><mi>a</mi><mi>r</mi><mi>a</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>o</mi><mi>d</mi><mi>o</mi><mi>r</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">Caratheodory</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mord mathdefault">o</span><span class="mord mathdefault">d</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span></span></span></span>可测的集合构成一个<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>σ</mi><mo>−</mo><mi>a</mi><mi>l</mi><mi>g</mi><mi>e</mi><mi>b</mi><mi>r</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">\sigma-algebra</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">a</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">a</span></span></span></span> M，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mo>∗</mo></msub></mrow><annotation encoding="application/x-tex">\mu_{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>限定在M构成一个测度函数，则<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>M</mi><mo separator="true">,</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(X,M,\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">μ</span><span class="mclose">)</span></span></span></span>为由<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>μ</mi><mo>∗</mo></msub></mrow><annotation encoding="application/x-tex">\mu_{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>导出的测度</p>
<h2 id="ii-lebesgue可测"><a class="markdownIt-Anchor" href="#ii-lebesgue可测"></a> II <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>e</mi><mi>b</mi><mi>e</mi><mi>s</mi><mi>g</mi><mi>u</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Lebesgue</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">u</span><span class="mord mathdefault">e</span></span></span></span>可测</h2>
<p>定义4：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>Q</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">Q_{j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>R</mi><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">R^{d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span></span></span></span>上的闭立方体</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mo>∗</mo></msub><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mo>=</mo><mi>inf</mi><mo>⁡</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant="normal">∞</mi></munderover><mi mathvariant="normal">∣</mi><msub><mi>Q</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">m_{*}(E)=\inf\sum_{j=1}^{\infty}|Q_{j}|
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0651740000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop">in<span style="margin-right:0.07778em;">f</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathdefault">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mo>∗</mo></msub></mrow><annotation encoding="application/x-tex">m_{*}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>R</mi><mi>d</mi></msub></mrow><annotation encoding="application/x-tex">R_{d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>上的一个外测度</p>
<p>定义5：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>⊂</mo><msup><mi>R</mi><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">E\subset R^{d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span></span></span></span></span></span></span></span>,存在开集<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi><mo>⊂</mo><mi>O</mi></mrow><annotation encoding="application/x-tex">E\subset O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⊂</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span></p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>m</mi><mo>∗</mo></msub><mo stretchy="false">(</mo><mi>O</mi><mo>−</mo><mi>E</mi><mo stretchy="false">)</mo><mo>≤</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">m_{*}(O-E)\leq \epsilon
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.175696em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault">ϵ</span></span></span></span></span></p>
<p>则称<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span></span></span>是<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>L</mi><mi>e</mi><mi>b</mi><mi>e</mi><mi>s</mi><mi>g</mi><mi>u</mi><mi>e</mi></mrow><annotation encoding="application/x-tex">Lebesgue</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault">L</span><span class="mord mathdefault">e</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault">s</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">u</span><span class="mord mathdefault">e</span></span></span></span>可测的</p>
<p>通过定义5得到的可测空间与通过定义3得到的可测空间是一样的</p>
]]></content>
  </entry>
  <entry>
    <title>树莓派蓝牙音箱</title>
    <url>/2020/01/12/%E6%A0%91%E8%8E%93%E6%B4%BE%E8%93%9D%E7%89%99%E9%9F%B3%E7%AE%B1/</url>
    <content><![CDATA[<h1 id="树莓派蓝牙音箱"><a class="markdownIt-Anchor" href="#树莓派蓝牙音箱"></a> 树莓派蓝牙音箱</h1>
<span id="more"></span>
<p>使用pulseauido及bluez相关的工具实现树莓派蓝牙音箱</p>
<h2 id="pulseaudio"><a class="markdownIt-Anchor" href="#pulseaudio"></a> pulseaudio</h2>
<p>启动pulseaudio并加载蓝牙模块提供服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pulseaudio -D</span><br><span class="line">pactl load-module module-bluetooth-discover</span><br></pre></td></tr></table></figure>
<h2 id="蓝牙"><a class="markdownIt-Anchor" href="#蓝牙"></a> 蓝牙</h2>
<p>1 进入可以管理蓝牙的控制台</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">bluetoothctl</span><br></pre></td></tr></table></figure>
<p>2 显示可选的蓝牙设备</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">list</span><br><span class="line"></span><br><span class="line">Controller B8:27:EB:F1:6D:C1 raspberrypi #2 [default]</span><br></pre></td></tr></table></figure>
<p>如果有usb设备通过select选择需要操作的蓝牙设备</p>
<p>3 显示蓝牙设备的状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show</span><br><span class="line"></span><br><span class="line">Controller B8:27:EB:F1:6D:C1 (public)</span><br><span class="line">        Name: raspberrypi #2</span><br><span class="line">        Alias: raspberrypi #2</span><br><span class="line">        Class: 0x00000000</span><br><span class="line">        Powered: yes</span><br><span class="line">        Discoverable: no</span><br><span class="line">        Pairable: yes</span><br><span class="line">        UUID: Generic Attribute Profile (00001801-0000-1000-8000-00805f9b34fb)</span><br><span class="line">        UUID: A/V Remote Control        (0000110e-0000-1000-8000-00805f9b34fb)</span><br><span class="line">        UUID: PnP Information           (00001200-0000-1000-8000-00805f9b34fb)</span><br><span class="line">        UUID: A/V Remote Control Target (0000110c-0000-1000-8000-00805f9b34fb)</span><br><span class="line">        UUID: Generic Access Profile    (00001800-0000-1000-8000-00805f9b34fb)</span><br><span class="line">        Modalias: usb:v1D6Bp0246d0532</span><br><span class="line">        Discovering: no</span><br></pre></td></tr></table></figure>
<p>4 更改蓝牙显示名称并设置相关的状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">system-alias Pi</span><br><span class="line">//供电</span><br><span class="line">power on</span><br><span class="line">//可配对</span><br><span class="line">pairable on</span><br><span class="line">//可被发现</span><br><span class="line">discoverable on</span><br><span class="line">trust phone&#x27;s mac</span><br></pre></td></tr></table></figure>
<p>此时从手机可以与蓝牙配对，但是无法从手机主动去连接，需要信任该手机才可以从手机连接树莓派的蓝牙播放音频</p>
<p>5 设置配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/bluetooth/main.conf</span><br><span class="line"># 自动开启蓝牙</span><br><span class="line">[Policy]</span><br><span class="line">AutoEnable=true</span><br><span class="line"></span><br><span class="line">[General]</span><br><span class="line"># 可以被发现的时间，0为一直可被扫描到</span><br><span class="line">DiscoverableTimeout = 0</span><br><span class="line"># 默认为可以被发现</span><br><span class="line">Discoverable=true</span><br></pre></td></tr></table></figure>
<h2 id=""><a class="markdownIt-Anchor" href="#"></a> </h2>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>树莓派网络设置</title>
    <url>/2019/06/24/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="树莓派网络设置"><a class="markdownIt-Anchor" href="#树莓派网络设置"></a> 树莓派网络设置</h1>
<span id="more"></span>
<p>树莓派设置自动连接多个无线网络</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/network/interfaces</span><br></pre></td></tr></table></figure>
<p>打开后添加以下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auto wlan0</span><br><span class="line">allow-hotplug wlan0</span><br><span class="line">iface wlan0 inet dhcp</span><br><span class="line">wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/wpa_supplicant/wpa_supplicant.conf</span><br></pre></td></tr></table></figure>
<p>配置网络</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">network=&#123;</span><br><span class="line">    ssid=&quot;test&quot;</span><br><span class="line">    key_mgmt=WPA-PSK</span><br><span class="line">    psk=&quot;testtest&quot;</span><br><span class="line">&#125;</span><br><span class="line">network=&#123;</span><br><span class="line">    ssid=&quot;test1&quot;</span><br><span class="line">    key_mgmt=NONE</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以配置多个网络</p>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title>获得dll导出类的私有成员与函数</title>
    <url>/2019/01/22/%E8%8E%B7%E5%BE%97dll%E5%AF%BC%E5%87%BA%E7%B1%BB%E7%9A%84%E7%A7%81%E6%9C%89%E6%88%90%E5%91%98%E4%B8%8E%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="获得dll导出类的私有成员与函数"><a class="markdownIt-Anchor" href="#获得dll导出类的私有成员与函数"></a> 获得dll导出类的私有成员与函数</h1>
<span id="more"></span>
<p>测试环境visual studio 2017</p>
<p>A.h</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class __declspec(dllexport) A</span><br><span class="line">&#123;</span><br><span class="line">private:</span><br><span class="line">    int a;</span><br><span class="line">private:</span><br><span class="line">    int geta();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>A.cpp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int A::geta()&#123;return a;&#125;</span><br></pre></td></tr></table></figure>
<p>编译成dll，在别的工程中使用</p>
<h2 id="1获得私有成员"><a class="markdownIt-Anchor" href="#1获得私有成员"></a> 1.获得私有成员</h2>
<p>因为成员变量实际不由dll生成，没有符号信息只需做以下更改</p>
<p>A.h</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class A</span><br><span class="line">&#123;</span><br><span class="line">public:</span><br><span class="line">    int a;</span><br><span class="line">private:</span><br><span class="line">    int geta();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>可以直接改变成员变量的控制权限</p>
<p>main.cpp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">A obj;</span><br><span class="line">obj.a = 1;</span><br></pre></td></tr></table></figure>
<h2 id="2获得私有成员函数"><a class="markdownIt-Anchor" href="#2获得私有成员函数"></a> 2.获得私有成员函数</h2>
<p>成员函数在dll中有导出信息，直接将private改成public会导致编译器无法找到符号信息。可以借用友元函数去调用</p>
<p>A.h</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">class A</span><br><span class="line">&#123;</span><br><span class="line">friend int main();</span><br><span class="line">public:</span><br><span class="line">    int a;</span><br><span class="line">private:</span><br><span class="line">    int geta();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>main.cpp</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int main()&#123;</span><br><span class="line">    A obj;</span><br><span class="line">    a.geta();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C++</category>
      </categories>
  </entry>
  <entry>
    <title>调整ubutun在hyperv下分辨率</title>
    <url>/2020/09/25/%E8%B0%83%E6%95%B4ubutun%E5%9C%A8hyperv%E4%B8%8B%E5%88%86%E8%BE%A8%E7%8E%87/</url>
    <content><![CDATA[<h1 id="调整ubutun在hyperv下分辨率"><a class="markdownIt-Anchor" href="#调整ubutun在hyperv下分辨率"></a> 调整ubutun在hyperv下分辨率</h1>
<span id="more"></span>
<p>使用默认编辑器编辑启动文件,在GRUB_CMDLINE_LINUX_DEFAULT后面添加video=hyperv_fb:800x600</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/default/grub</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet splash video=hyperv_fb:1920x1080&quot;</span><br></pre></td></tr></table></figure>
<p>更新grub,重启</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo update-grub</span><br><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Neon简介</title>
    <url>/2022/03/23/Neon%E7%AE%80%E4%BB%8B/</url>
    <content><![CDATA[<h1 id="-swig1-"><a class="markdownIt-Anchor" href="#-swig1-"></a> Neon简介</h1>
<span id="more"></span>
<h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2>
<p>Arm Neon是Arm Cortex-A和Cortex-R系列处理器的一种高级SIMD架构扩展</p>
<p>Neon通过定义一组用于操作64bit D,doubleword的寄存器和128bit Q,quadword的寄存器的指令来扩展SIMD的概念</p>
<p>Neon寄存器组由32个64bit寄存器,这些寄存器可以视为以下两种寄存器组来使用</p>
<ol>
<li>16个128bit quadword寄存器,Q0-Q15</li>
<li>32个64bit doubleword寄存器,D0-D31</li>
</ol>
<p>Neon可以通过以下方式来使用</p>
<ol>
<li>汇编指令</li>
<li>编译器优化</li>
<li>Neon instrinsics</li>
</ol>
<h2 id="neon-intrinsics"><a class="markdownIt-Anchor" href="#neon-intrinsics"></a> Neon Intrinsics</h2>
<p>Neon instrinsics提供了一种通过写c语言来使用neon的方式</p>
<p>两个4维float类型向量相加的例子</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">void add(float* v1, float* v2, float* v3)&#123;</span><br><span class="line">    float32x4x3_t cache;</span><br><span class="line">    cache.val[0] = vld1q_f32(v1);</span><br><span class="line">    cache.val[1] = vld1q_f32(v2);</span><br><span class="line">    cache.val[2] = vaddq_f32(cache.val[0], cache.val[1]);</span><br><span class="line">    vst1q_f32(v3, cache.val[2]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2>
<ol>
<li><a href="https://developer.arm.com/architectures/instruction-sets/simd-isas/neon">https://developer.arm.com/architectures/instruction-sets/simd-isas/neon</a></li>
<li><a href="/assets/102159_0400_01_CodingForNeon.pdf">102159_0400_01_CodingForNeon.pdf</a></li>
<li><a href="//assets/DEN0018A_neon_programmers_guide.pdf">DEN0018A_neon_programmers_guide.pdf</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>CIE图</title>
    <url>/2022/03/31/CIE%E5%9B%BE/</url>
    <content><![CDATA[<h1 id="-swig0-"><a class="markdownIt-Anchor" href="#-swig0-"></a> CIE图</h1>
<span id="more"></span>
<h2 id="颜色"><a class="markdownIt-Anchor" href="#颜色"></a> 颜色</h2>
<p>颜色是由光映入眼睛我们大脑所产生的一种认知,所以颜色本质上是对光的描述</p>
<p>物理上光具有波的特性,即波长,振幅和相位,其中波长和振幅对我们的感知影响最大</p>
<p>可见光<br />
人眼所能感受的光称为可见光,可见光的波长范围为380-780nm之间</p>
<p>单色光<br />
单一波长产生的光被称为单色光</p>
<p>如果每个颜色能和可见光光谱里的单色光一一对应,那么一切都会变得简单起来,我们只需要400个数字就可以区分所有颜色,然而事实是颜色并不能和单色光一一对应,即有些颜色是无法通过单色光产生,不过幸运的是,我们能看到的所有颜色都可以通过不同的单色光叠加而产生</p>
<p>到这一步虽然我们知道所有颜色都可以通过单色光叠加出来,然而单色光有400种,那我们描述颜色时则需要考虑400个变量相加,这显然是不方便的</p>
<p>并且还有一点需要注意的是,一个颜色也不能唯一的描述成一组单色光的叠加,这就意味如果我们使用400个单色光来描述颜色,那么大部分的组合都是冗余的</p>
<p>那么我们能否找到一组单色光,使得所有颜色都能用这组单色光的叠加组合来描述呢,三原色可以帮我们回答这个问题,不过在继续说三原色之前,先明确一个概念,那就是叠加</p>
<p>显然在我之前的描述中叠加就是将不同的波长光同时映入我们的眼睛,这是符合我们的常识的,然而事实上如果想要三原色能描述所有颜色,这样的叠加是不够的,我们之后会重新提到叠加的意义,不过目前还是回到三原色</p>
<p>想要证明三原色能够表示所有的颜色,只需要证明三原色能够表示所有的单色光即可,而历史上的一个实验–光谱色的色度特性实验,可以给我们回答</p>
<p>光谱色的色度特性实验,这个实验的思想很简单,通过人眼去观察一个单色光和一个由三原色组成的光,如果我们无法分辨就认为这个单色光可以由三原色组成,同时可以得到组成的系数,写成以下的公式</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>=</mo><mi>r</mi><mi>R</mi><mo>+</mo><mi>g</mi><mi>G</mi><mo>+</mo><mi>b</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">X = rR + gG + bB
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></span></p>
<p>其中X为待测的单色光,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo separator="true">,</mo><mi>g</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">r,g,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">b</span></span></span></span>为系数,<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>R</mi><mo separator="true">,</mo><mi>G</mi><mo separator="true">,</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">R,G,B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">G</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span>为选定的三原色的波长</p>
<p>在这里要阐述历史上另一个有关颜色的结论–颜色叠加具有线性性</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>=</mo><mi>r</mi><mi>R</mi><mo>+</mo><mi>g</mi><mi>G</mi><mo>+</mo><mi>b</mi><mi>B</mi><mo>=</mo><mi>k</mi><mi>r</mi><mi>R</mi><mo>+</mo><mi>k</mi><mi>g</mi><mi>G</mi><mo>+</mo><mi>k</mi><mi>b</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">X = rR + gG + bB = krR + kgG + kbB 
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.03148em;">k</span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></span></p>
<p>简单来说只要比例相同叠加的颜色就相同,对颜色来说则是同比例不同系数只会影响颜色的亮度不会改变颜色色系</p>
<p>有了叠加的线性性,我们可以通过归一化<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>r</mi><mo>+</mo><mi>g</mi><mo>+</mo><mi>b</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">r+g+b=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>,这样颜色就可以描述在一个二维平面上了</p>
<p>回到我们所关注的实验上来,很不幸的是,这个实验推翻了我们美好的幻想,单色光并不能通过三原色的叠加产生,不过如果允许在单色光上叠加一种三原色的话,那么产生的光可以由三原色叠加产生,即以下的等式</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>+</mo><mi>r</mi><mi>R</mi><mo>=</mo><mi>g</mi><mi>G</mi><mo>+</mo><mi>b</mi><mi>B</mi></mrow><annotation encoding="application/x-tex">X + rR = gG + bB
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span></span></span></span></span></p>
<p>从实验的角度来说我们无法把这个原色移到右边去,因为无法做到光的减法,但是从数学模型的角度上来看我们可以使用减法来表示上述等式</p>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>X</mi><mo>=</mo><mi>g</mi><mi>G</mi><mo>+</mo><mi>b</mi><mi>B</mi><mo>−</mo><mi>r</mi><mi>R</mi></mrow><annotation encoding="application/x-tex">X = gG + bB - rR
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mord mathdefault">G</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathdefault">b</span><span class="mord mathdefault" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span></span></span></span></span></p>
<p>如果我们允许这样的叠加(此时的叠加是数学意义上的线性叠加而不仅是实际意义上的叠加)那么三原色能够表示所有的单色光问题就解决了,并且由于叠加的线性性,这种表示是唯一的,即所有颜色都和RGB的线性表示一一对应</p>
<h2 id="cie图"><a class="markdownIt-Anchor" href="#cie图"></a> CIE图</h2>
<p>CIE 1931图就是以上的公式的图像表示(也是实验的结果),为了美观进行了数学意义上的变换处理(不用担心,这种处理并不会影响线性性,仅仅为了美观),需要注意的是任何显示设备都无法显示完整的CIE图,这是由显示设备所用的色彩模型决定的</p>
<p>CIE图并不是规则这主要是因为CIE图需要表示的是可见光的范围,对于公式来说系数没有限制,但是对于我们来说超出可见光的部分没有意义,所以不需要在图上表示</p>
<hr />
<h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2>
<ol>
<li><a href="https://www.zhangxiaochun.com/color-space-1/">https://www.zhangxiaochun.com/color-space-1/</a></li>
<li><a href="https://blog.csdn.net/qq_40692109/article/details/105268187">https://blog.csdn.net/qq_40692109/article/details/105268187</a></li>
<li><a href="http://www.360doc.com/content/17/0226/12/31887026_632123788.shtml">http://www.360doc.com/content/17/0226/12/31887026_632123788.shtml</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>CALayer动画</title>
    <url>/2023/02/14/CALayer%E5%8A%A8%E7%94%BB/</url>
    <content><![CDATA[<h1 id="-swig7-"><a class="markdownIt-Anchor" href="#-swig7-"></a> CALayer动画</h1>
<span id="more"></span>
<h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2>
<p>CALayer用来管理图像内容并且允许你在上面执行动画</p>
<p>CABasicAnimation通过改变CALayer的属性来实现一个基础的动画</p>
<h2 id="基本用法"><a class="markdownIt-Anchor" href="#基本用法"></a> 基本用法</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CALayer* layer = [[CALayer alloc] init];</span><br><span class="line"></span><br><span class="line">CABasicAnimation* animation = [CABasicAnimation animationWithKeyPath:@&quot;transform.rotation&quot;];</span><br><span class="line"></span><br><span class="line">animation.duration = 1.0;</span><br><span class="line"></span><br><span class="line">animation.byValue = @(M_PI * 2);</span><br><span class="line"></span><br><span class="line">animation.repeatCount = -1;</span><br><span class="line"></span><br><span class="line">[layer addAnimation:animation forKey:nil];</span><br></pre></td></tr></table></figure>
<p>以上是基本用法,CABasicAnimation通过修改CALayer的旋转变换实现一个动画</p>
<h2 id="进阶用法"><a class="markdownIt-Anchor" href="#进阶用法"></a> 进阶用法</h2>
<p>通常我们会通过重写CALayer的drawInContext的方法来实现自绘的内容,比如绘制一个圆之类或者更复杂的图像,这时候我们的直接使用动画可能会无法满足我们的需求,比如我们只想旋转一个图元而不是CALayer这个整体,由于CABasicAnimation是通过改变CALayer的属性来实现的动画的,我们可以通过添加自定义属性来对整体的内容进行更近准的操作</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@interface CLayer : CALayer</span><br><span class="line"></span><br><span class="line">@property (nonatomic, assign) CGFloat r;</span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation CLayer</span><br><span class="line">@synthesize r;</span><br><span class="line"></span><br><span class="line">- (void)drawInContext:(CGContextRef)ctx &#123;</span><br><span class="line">    float ratio = self.frame.size.width * 0.5;</span><br><span class="line">    CGContextSetLineWidth(ctx, 1/ratio);</span><br><span class="line">    CGContextSetRGBFillColor(ctx, 1, 0, 0, 1);</span><br><span class="line">    CGContextTranslateCTM(ctx, self.frame.size.width*0.5, self.frame.size.height*0.5);</span><br><span class="line">    CGContextScaleCTM(ctx, ratio, -ratio);</span><br><span class="line">    CGContextSetRGBFillColor(ctx, 1, 1, 0, 1);</span><br><span class="line">    CGContextRotateCTM(ctx, self.r);</span><br><span class="line">    CGContextFillEllipseInRect(ctx, CGRectMake(0, 0, 1, 1));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (instancetype)initWithLayer:(id)layer &#123;</span><br><span class="line">    if ((self = [super initWithLayer:layer])) &#123;</span><br><span class="line">        if ([layer isKindOfClass:[CLayer class]]) &#123;</span><br><span class="line">            // Copy custom property values between layers</span><br><span class="line">            CLayer *other = (CLayer *)layer;</span><br><span class="line">            self.r = other.r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)setR:(CGFloat)val &#123;</span><br><span class="line">    r = val;</span><br><span class="line">    [self setNeedsDisplay];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (BOOL) needsDisplayForKey:(NSString *) key &#123;</span><br><span class="line">    if ([key isEqualToString:@&quot;r&quot;]) &#123;</span><br><span class="line">        return YES;</span><br><span class="line">    &#125;</span><br><span class="line">    return [super needsDisplayForKey:key];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure>
<p>以上的代码重写了CALayer的绘制函数并且自定义了一个CALayer的属性,之后我们可以通过CABasicAnimation来产生一个属性动画,从而完成某些特定的效果,下面会对关键的代码进行说明</p>
<hr />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@property (nonatomic, assign) CGFloat r;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">- (void)setR:(CGFloat)val &#123;</span><br><span class="line">    r = val;</span><br><span class="line">    [self setNeedsDisplay];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>理所当然的我们需要一个自定义属性来让CABasicAnimation来更改</p>
<hr />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- (void)drawInContext:(CGContextRef)ctx &#123; ... &#125;</span><br></pre></td></tr></table></figure>
<p>自定义绘制代码,里面的坐标变换仅仅是为了绘制方便而已</p>
<hr />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+ (BOOL) needsDisplayForKey:(NSString *) key &#123;</span><br><span class="line">    if ([key isEqualToString:@&quot;r&quot;]) &#123;</span><br><span class="line">        return YES;</span><br><span class="line">    &#125;</span><br><span class="line">    return [super needsDisplayForKey:key];</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>必须要重写该方法,否则会认为这个属性不会对显示内容造成影响,作用于该属性的动画不会生效</p>
<hr />
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- (instancetype)initWithLayer:(id)layer &#123;</span><br><span class="line">    if ((self = [super initWithLayer:layer])) &#123;</span><br><span class="line">        if ([layer isKindOfClass:[CLayer class]]) &#123;</span><br><span class="line">            CLayer *other = (CLayer *)layer;</span><br><span class="line">            self.r = other.r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>事实上删除掉这个方法在这个例子里完全不会影响最终的结果,但是如果你需要多个自定义的属性的话就必须重写该方法并且需要保证属性正确的赋值,因为CABasicAnimation在执行的动画会调用initWithLayer产生新的CALayer,默认的方法不会处理自定义属性,所以需要我们自己进行来处理</p>
<hr />
<p>之后我们可以就可以操作自定义属性来实现动画</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CLayer* layer = [[CLayer alloc] init];</span><br><span class="line">CABasicAnimation* anim = [CABasicAnimation animationWithKeyPath:@&quot;r&quot;];</span><br><span class="line">anim.fromValue = @(0);</span><br><span class="line">anim.toValue = @(1);</span><br><span class="line">anim.repeatCount = INFINITY;</span><br><span class="line">anim.fillMode = kCAFillModeForwards;</span><br><span class="line">anim.duration = 3;</span><br><span class="line">[layer addAnimation:anim forKey:@&quot;&quot;];</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
</search>
